@import "tailwindcss";
@import "tw-animate-css";

@custom-variant dark (&:is(.dark *));

@layer base {
  /* =============================================================================
   * ECO DESIGN SYSTEM - COMPLETE DOCUMENTATION
   * =============================================================================
   *
   * This design system is optimized for v0.dev integration and provides
   * comprehensive documentation for DTN weather data company projects.
   *
   * TABLE OF CONTENTS:
   * 1. v0 Integration Guide
   * 2. Registry URLs
   * 3. Typography System
   * 4. Button Component System
   * 5. Alert Component System
   * 6. Badge Component System
   * 7. Input & Select Components
   * 8. Avatar Size System
   * 9. Color System Overview
   *
   * =============================================================================
   * 1. v0 INTEGRATION GUIDE
   * =============================================================================
   *
   * QUICK START FOR v0 DEVELOPERS:
   * 1. Import components from registry URLs (see registry section below)
   * 2. Use Tailwind utilities with our custom color system
   * 3. Follow component usage patterns documented in each section
   * 4. All components work in version 0 of the design system
   *
   * IMPORT PATTERNS:
   * ```tsx
   * // Individual components (recommended for v0)
   * import { Button } from "@/components/ui/button"
   * import { TypographyH1 } from "@/components/ui/typography-h1"
   *
   * // Compound components (for complex layouts)
   * import { Typography } from "@/components/ui/typography"
   *
   * // Utility classes (fallback)
   * <div className="bg-primary text-primary-foreground p-4 rounded-lg">
   * ```
   *
   * THEME CUSTOMIZATION:
   * - All colors are CSS custom properties for easy theming
   * - Light/dark mode support built-in
   * - Customizable via CSS variables in :root and .dark selectors
   * - Brand colors: --brand-blue (#1497e3), --brand-green (#68c949)
   *
   * COMPONENT FEATURES:
   * - All components support asChild prop for polymorphic rendering
   * - Consistent sizing and spacing system
   * - Accessibility-first design
   * - TypeScript support with proper type definitions
   * - Responsive design with mobile-first approach
   *
   * =============================================================================
   * 2. REGISTRY URLs - CENTRALIZED REFERENCE
   * =============================================================================
   *
   * All registry URLs for easy v0 integration. Copy these directly into v0.
   *
   * MAIN REGISTRY:
   * https://eco-design-system-2.vercel.app/r/registry.json
   *
   * STYLES (Typography, Colors, etc.):
   * - Typography: https://eco-design-system-2.vercel.app/r/styles/typography.json
   * - Typography H1: https://eco-design-system-2.vercel.app/r/styles/typography-h1.json
   * - Typography H2: https://eco-design-system-2.vercel.app/r/styles/typography-h2.json
   * - Typography H3: https://eco-design-system-2.vercel.app/r/styles/typography-h3.json
   * - Typography H4: https://eco-design-system-2.vercel.app/r/styles/typography-h4.json
   * - Typography H5: https://eco-design-system-2.vercel.app/r/styles/typography-h5.json
   * - Typography H6: https://eco-design-system-2.vercel.app/r/styles/typography-h6.json
   * - Button: https://eco-design-system-2.vercel.app/r/styles/button.json
   * - Alert: https://eco-design-system-2.vercel.app/r/styles/alert.json
   * - Badge: https://eco-design-system-2.vercel.app/r/styles/badge.json
   * - Card: https://eco-design-system-2.vercel.app/r/styles/card.json
   * - Input: https://eco-design-system-2.vercel.app/r/styles/input.json
   * - Select: https://eco-design-system-2.vercel.app/r/styles/select.json
   *
   * COMPONENTS (Interactive Elements):
   * - All components: https://eco-design-system-2.vercel.app/r/components/
   * - Button: https://eco-design-system-2.vercel.app/r/components/button.json
   * - Alert: https://eco-design-system-2.vercel.app/r/components/alert.json
   * - Badge: https://eco-design-system-2.vercel.app/r/components/badge.json
   * - Card: https://eco-design-system-2.vercel.app/r/components/card.json
   * - Input: https://eco-design-system-2.vercel.app/r/components/input.json
   * - Select: https://eco-design-system-2.vercel.app/r/components/select.json
   *
   * BLOCKS (Complete Layouts):
   * - All blocks: https://eco-design-system-2.vercel.app/r/blocks/
   * - Dashboard: https://eco-design-system-2.vercel.app/r/blocks/dashboard.json
   * - Clean Dashboard: https://eco-design-system-2.vercel.app/r/blocks/clean-dashboard.json
   * - Simple Dashboard: https://eco-design-system-2.vercel.app/r/blocks/simple-dashboard.json
   * - Store: https://eco-design-system-2.vercel.app/r/blocks/store.json
   * - Login: https://eco-design-system-2.vercel.app/r/components/login.json
   * - Hero: https://eco-design-system-2.vercel.app/r/components/hero.json
   * - Product Grid: https://eco-design-system-2.vercel.app/r/components/product-grid.json
   *
   * THEME:
   * - Theme: https://eco-design-system-2.vercel.app/r/themes/theme.json
   *
   * =============================================================================
   * 3. TYPOGRAPHY SYSTEM
   * =============================================================================
   *
   * This design system provides consistent typography components for all DTN projects.
   * Optimized for v0.dev integration with comprehensive usage examples.
   *
   * Available Typography Components:
   * - Typography.H1: Main page titles (text-2xl, font-bold, leading-6)
   * - Typography.H2: Section headers (text-2xl, font-bold, leading-6)
   * - Typography.H3: Subsection headers (text-xl, font-bold, leading-5)
   * - Typography.H4: Component headers (text-lg, font-bold, leading-5)
   * - Typography.H5: Small headers (text-base, font-bold, leading-5)
   * - Typography.H6: Smallest headers (text-sm, font-bold, leading-4)
   *
   * Individual Components (RECOMMENDED for v0):
   * - TypographyH1: Main page titles
   * - TypographyH2: Section headers
   * - TypographyH3: Subsection headers
   * - TypographyH4: Component headers
   * - TypographyH5: Small headers
   * - TypographyH6: Smallest headers
   *
   * v0 Usage Examples:
   * ```tsx
   * // Individual components (RECOMMENDED for v0)
   * import { TypographyH1 } from "@/components/ui/typography-h1";
   * import { TypographyH2 } from "@/components/ui/typography-h2";
   * import { TypographyH3 } from "@/components/ui/typography-h3";
   *
   * <TypographyH1>Main Page Title</TypographyH1>
   * <TypographyH2>Section Header</TypographyH2>
   * <TypographyH3>Subsection Header</TypographyH3>
   *
   * // Compound component (for complex layouts)
   * import { Typography } from "@/components/ui/typography";
   * <Typography.H1>Main Page Title</Typography.H1>
   * <Typography.H2>Section Header</Typography.H2>
   *
   * // Utility classes (fallback for custom styling)
   * <h1 className="font-bold text-2xl leading-6">Main Title</h1>
   * <h2 className="font-bold text-2xl leading-6">Section Header</h2>
   * <h3 className="font-bold text-xl leading-5">Subsection</h3>
   * ```
   *
   * v0 Integration Features:
   * - All components work in version 0 of the design system
   * - TypeScript support with proper type definitions
   * - asChild prop support for polymorphic rendering
   * - Consistent Tailwind CSS utilities for maximum compatibility
   * - Font weights consistently set to 700 (font-bold) across all heading levels
   * - Line heights optimized for readability and visual hierarchy
   * - Responsive design with mobile-first approach
   *
   * Customization for v0:
   * - Override colors using CSS custom properties
   * - Modify spacing with Tailwind utilities
   * - Add custom classes while maintaining base functionality
   * - Use className prop for additional styling
   *
   * Base Font Size Declaration:
   * This ensures consistent rem-based sizing across all browsers and platforms.
   * All rem values in this design system are calculated based on 16px = 1rem.
   *
   * Benefits:
   * - Predictable sizing across all browsers
   * - Consistent behavior regardless of user preferences
   * - Professional design system with explicit control
   * - Accessibility compliance with clear text sizing
   *
   * Text size scale (all mathematically accurate):
   * - --text-xs: 0.6875rem = 11px
   * - --text-sm: 0.75rem = 12px
   * - --text-base: 0.8125rem = 13px
   * - --text-md: 0.875rem = 14px
   * - --text-lg: 1rem = 16px
   * - --text-xl: 1.125rem = 18px
   * - --text-2xl: 1.25rem = 20px
   * - --text-3xl: 1.5rem = 24px
   * - --text-4xl: 1.75rem = 28px
   * - --text-5xl: 2rem = 32px
   *
   * =============================================================================
   * 4. BUTTON COMPONENT SYSTEM
   * =============================================================================
   *
   * Comprehensive button system with dedicated color variables for consistent theming
   * across all button variants. Optimized for v0.dev integration.
   *
   * Available button variants:
   * - default: Primary action button (bg-button-primary, text-button-primary-foreground, hover:bg-button-primary-hover)
   * - destructive: Dangerous actions (bg-button-destructive, text-button-destructive-foreground, hover:bg-button-destructive-hover)
   * - outline: Secondary actions with border (bg-button-outline, border-button-outline-border, text-button-outline-foreground, hover:bg-button-outline-hover)
   * - secondary: Alternative primary actions with border (bg-button-secondary, border-button-secondary-border, text-button-secondary-foreground, hover:bg-button-secondary-hover)
   *   NOTE: Secondary and Outline variants are visually identical but use different CSS variables for semantic distinction
   * - ghost: Subtle actions without border (hover:bg-button-ghost-hover, hover:text-button-ghost-hover-foreground)
   * - link: Text-based actions (text-button-link, hover:text-button-link-hover, hover:underline)
   *
   * Available button sizes:
   * - sm: Small button (h-6, px-3) - 24px height, compact for tight spaces
   * - default: Standard button (h-8, px-4, py-2) - 32px height, most common size
   * - lg: Large button (h-10, px-6) - 40px height, prominent actions
   * - icon: Square icon button (size-8) - 32px × 32px, icon-only content
   *
   * v0 Usage Examples:
   * ```tsx
   * // Import button component
   * import { Button } from "@/components/ui/button";
   *
   * // Basic usage with variants
   * <Button variant="default">Primary Action</Button>
   * <Button variant="destructive">Delete Item</Button>
   * <Button variant="outline">Outline Action</Button>
   * <Button variant="secondary">Secondary Action</Button>
   * <Button variant="ghost">Ghost Action</Button>
   * <Button variant="link">Link Action</Button>
   *
   * // Size variants with clear dimensions
   * <Button size="sm">Small (24px)</Button>           // h-6, px-3
   * <Button size="default">Default (32px)</Button>    // h-8, px-4, py-2
   * <Button size="lg">Large (40px)</Button>           // h-10, px-6
   * <Button size="icon">Icon Only</Button>            // size-8 (32×32px)
   *
   * // Size examples with different variants
   * <Button variant="destructive" size="sm">Delete</Button>
   * <Button variant="outline" size="lg">Save Changes</Button>
   * <Button variant="ghost" size="icon">
   *   <SettingsIcon className="h-4 w-4" />
   * </Button>
   *
   * // With icons and proper spacing
   * <Button size="default">
   *   <PlusIcon className="mr-2 h-4 w-4" />
   *   Add Item
   * </Button>
   *
   * // Custom styling
   * <Button className="w-full">Full Width</Button>
   * <Button disabled>Disabled State</Button>
   * ```
   *
   * v0 Integration Features:
   * - All components work in version 0 of the design system
   * - TypeScript support with proper type definitions
   * - asChild prop support for polymorphic rendering
   * - Consistent Tailwind CSS utilities for maximum compatibility
   * - Responsive design with mobile-first approach
   * - Accessibility-first design with proper focus states
   *
   * Customization for v0:
   * - Override colors using CSS custom properties
   * - Modify spacing with Tailwind utilities
   * - Add custom classes while maintaining base functionality
   * - Use className prop for additional styling
   * - Customize hover states with dedicated color variables
   *
   * =============================================================================
   * 5. ALERT COMPONENT SYSTEM
   * =============================================================================
   *
   * Comprehensive alert system with semantic color variants for consistent theming.
   * Optimized for v0.dev integration with comprehensive usage examples.
   *
   * Available alert variants:
   * - default: Default color system (--default, --default-foreground, --default-border) using slate colors
   * - destructive: Error states (--alert-destructive, --alert-destructive-foreground, --alert-destructive-border)
   * - info: Information states (--info, --info-foreground, --info-border)
   * - success: Success states (--success, --success-foreground, --success-border)
   * - warning: Warning states (--warning, --warning-foreground, --warning-border)
   *
   * v0 Usage Examples:
   * ```tsx
   * // Import alert component
   * import { Alert, AlertDescription, AlertTitle } from "@/components/ui/alert";
   *
   * // Basic usage with variants
   * <Alert>
   *   <AlertTitle>Default Alert</AlertTitle>
   *   <AlertDescription>This is a default alert message.</AlertDescription>
   * </Alert>
   *
   * <Alert variant="destructive">
   *   <AlertTitle>Error</AlertTitle>
   *   <AlertDescription>Something went wrong. Please try again.</AlertDescription>
   * </Alert>
   *
   * <Alert variant="info">
   *   <AlertTitle>Information</AlertTitle>
   *   <AlertDescription>Here's some helpful information.</AlertDescription>
   * </Alert>
   *
   * <Alert variant="success">
   *   <AlertTitle>Success</AlertTitle>
   *   <AlertDescription>Your action was completed successfully.</AlertDescription>
   * </Alert>
   *
   * <Alert variant="warning">
   *   <AlertTitle>Warning</AlertTitle>
   *   <AlertDescription>Please review before proceeding.</AlertDescription>
   * </Alert>
   *
   * // With icons
   * <Alert>
   *   <InfoIcon className="h-4 w-4" />
   *   <AlertTitle>With Icon</AlertTitle>
   *   <AlertDescription>Alert with an icon.</AlertDescription>
   * </Alert>
   *
   * // With close button
   * <Alert showCloseButton>
   *   <AlertTitle>Dismissible Alert</AlertTitle>
   *   <AlertDescription>This alert can be closed.</AlertDescription>
   * </Alert>
   * ```
   *
   * v0 Integration Features:
   * - All components work in version 0 of the design system
   * - TypeScript support with proper type definitions
   * - asChild prop support for polymorphic rendering
   * - Consistent Tailwind CSS utilities for maximum compatibility
   * - Responsive design with mobile-first approach
   * - Accessibility-first design with proper ARIA roles
   *
   * Customization for v0:
   * - Override colors using CSS custom properties
   * - Modify spacing with Tailwind utilities
   * - Add custom classes while maintaining base functionality
   * - Use className prop for additional styling
   * - Customize close button behavior
   *
   * =============================================================================
   * 6. BADGE COMPONENT SYSTEM
   * =============================================================================
   *
   * Comprehensive badge system with semantic color variants that match the alert system.
   * Optimized for v0.dev integration with comprehensive usage examples.
   *
   * Available badge variants:
   * - default: Default color system (--default, --default-foreground) using slate colors
   * - destructive: Error states (bg-alert-destructive, text-alert-destructive-foreground)
   * - info: Information states (bg-info, text-info-foreground)
   * - success: Success states (bg-success, text-success-foreground)
   * - warning: Warning states (bg-warning, text-warning-foreground)
   *
   * v0 Usage Examples:
   * ```tsx
   * // Import badge component
   * import { Badge } from "@/components/ui/badge";
   *
   * // Basic usage with variants
   * <Badge>Default Badge</Badge>
   * <Badge variant="destructive">Error</Badge>
   * <Badge variant="info">Information</Badge>
   * <Badge variant="success">Success</Badge>
   * <Badge variant="warning">Warning</Badge>
   *
   * // With different sizes
   * <Badge size="sm">Small Badge</Badge>
   * <Badge size="default">Default Badge</Badge>
   * <Badge size="lg">Large Badge</Badge>
   *
   * // With icons
   * <Badge>
   *   <CheckIcon className="mr-1 h-3 w-3" />
   *   Verified
   * </Badge>
   *
   * // Custom styling
   * <Badge className="px-3 py-1">Custom Badge</Badge>
   * <Badge variant="outline">Outline Badge</Badge>
   *
   * // In lists or cards
   * <div className="flex gap-2">
   *   <Badge variant="success">Active</Badge>
   *   <Badge variant="info">New</Badge>
   *   <Badge variant="warning">Pending</Badge>
   * </div>
   * ```
   *
   * v0 Integration Features:
   * - All components work in version 0 of the design system
   * - TypeScript support with proper type definitions
   * - asChild prop support for polymorphic rendering
   * - Consistent Tailwind CSS utilities for maximum compatibility
   * - Responsive design with mobile-first approach
   * - Accessibility-first design
   *
   * Customization for v0:
   * - Override colors using CSS custom properties
   * - Modify spacing with Tailwind utilities
   * - Add custom classes while maintaining base functionality
   * - Use className prop for additional styling
   * - Customize size and shape with utility classes
   *
   * =============================================================================
   * 7. INPUT & SELECT COMPONENTS
   * =============================================================================
   *
   * Form input components optimized for v0.dev integration with comprehensive usage examples.
   *
   * v0 Usage Examples:
   * ```tsx
   * // Import form components
   * import { Input } from "@/components/ui/input";
   * import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
   * import { Label } from "@/components/ui/label";
   *
   * // Basic input usage
   * <div className="space-y-2">
   *   <Label htmlFor="email">Email</Label>
   *   <Input id="email" type="email" placeholder="Enter your email" />
   * </div>
   *
   * // Input with different types
   * <Input type="text" placeholder="Enter text" />
   * <Input type="password" placeholder="Enter password" />
   * <Input type="number" placeholder="Enter number" />
   * <Input type="search" placeholder="Search..." />
   *
   * // Input with states
   * <Input disabled placeholder="Disabled input" />
   * <Input className="border-red-500" placeholder="Error state" />
   *
   * // Basic select usage
   * <Select>
   *   <SelectTrigger>
   *     <SelectValue placeholder="Select an option" />
   *   </SelectTrigger>
   *   <SelectContent>
   *     <SelectItem value="option1">Option 1</SelectItem>
   *     <SelectItem value="option2">Option 2</SelectItem>
   *     <SelectItem value="option3">Option 3</SelectItem>
   *   </SelectContent>
   * </Select>
   *
   * // Select with label
   * <div className="space-y-2">
   *   <Label>Choose an option</Label>
   *   <Select>
   *     <SelectTrigger>
   *       <SelectValue placeholder="Select an option" />
   *     </SelectTrigger>
   *     <SelectContent>
   *       <SelectItem value="option1">Option 1</SelectItem>
   *       <SelectItem value="option2">Option 2</SelectItem>
   *     </SelectContent>
   *   </Select>
   * </div>
   *
   * // Form with validation
   * <form className="space-y-4">
   *   <div>
   *     <Label htmlFor="name">Name</Label>
   *     <Input id="name" required />
   *   </div>
   *   <div>
   *     <Label htmlFor="category">Category</Label>
   *     <Select>
   *       <SelectTrigger>
   *         <SelectValue placeholder="Select category" />
   *       </SelectTrigger>
   *       <SelectContent>
   *         <SelectItem value="weather">Weather</SelectItem>
   *         <SelectItem value="agriculture">Agriculture</SelectItem>
   *         <SelectItem value="energy">Energy</SelectItem>
   *       </SelectContent>
   *     </Select>
   *   </div>
   * </form>
   * ```
   *
   * v0 Integration Features:
   * - All components work in version 0 of the design system
   * - TypeScript support with proper type definitions
   * - Consistent Tailwind CSS utilities for maximum compatibility
   * - Responsive design with mobile-first approach
   * - Accessibility-first design with proper labels and ARIA attributes
   * - Form validation support
   *
   * Customization for v0:
   * - Override colors using CSS custom properties
   * - Modify spacing with Tailwind utilities
   * - Add custom classes while maintaining base functionality
   * - Use className prop for additional styling
   * - Customize focus states and validation styling
   *
   * =============================================================================
   * 8. AVATAR SIZE SYSTEM
   * =============================================================================
   *
   * These size utilities provide consistent avatar dimensions across all variants.
   *
   * Available sizes:
   * - size-8: 32px (2rem) - Small avatar for compact layouts
   * - size-10: 40px (2.5rem) - Medium avatar for standard use
   * - size-12: 48px (3rem) - Large avatar for prominent display
   *
   * Usage in components:
   * - className="size-8" (32px avatar)
   * - className="size-10" (40px avatar)
   * - className="size-12" (48px avatar)
   *
   * Automatic scaling:
   * - All sizes maintain aspect-square ratio
   * - Responsive design with proper scaling
   * - Consistent spacing and alignment
   *
   * Component integration:
   * - Avatar component automatically uses these utilities
   * - Size variants map directly to Tailwind size classes
   * - Fallback content scales appropriately
   * - Images maintain proper proportions
   *
   * =============================================================================
   * 9. COLOR SYSTEM OVERVIEW
   * =============================================================================
   *
   * The design system uses a comprehensive color palette with semantic naming:
   *
   * Brand Colors:
   * - --brand-blue: #1497e3 (Primary brand color)
   * - --brand-green: #68c949 (Secondary brand color)
   *
   * Neutral Colors:
   * - --neutral-white: #ffffff
   * - --neutral-black: #000000
   *
   * Color Scales (50-950):
   * - Gray: Neutral grays for text and backgrounds
   * - Slate: Cool grays for UI elements
   * - Blue: Primary brand blues
   * - Green: Secondary brand greens
   * - Red: Error and destructive states
   * - Orange: Warning states
   *
   * Semantic Colors:
   * - --primary: Main action color
   * - --secondary: Secondary action color
   * - --destructive: Error/danger color
   * - --muted: Subtle text color
   * - --accent: Accent color
   * - --background: Page background
   * - --foreground: Main text color
   *
   * All colors automatically adapt to light/dark mode via CSS custom properties.
   * Colors are mapped to Tailwind utilities in the @theme inline section below.
   *
   * =============================================================================
   * END OF DOCUMENTATION
   * ============================================================================= */

  html {
    font-size: 16px;
    font-family: var(--font-sans);
  }

  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-border, currentColor);
  }

  body {
    font-size: var(--text-base);
    color: var(--color-foreground);
    line-height: 1.5;
    font-family: var(--font-sans);
    @apply bg-background text-foreground;
  }

  * {
    @apply border-border outline-ring/50;
  }


}

:root {
  --neutral-white: #ffffff;
  --neutral-black: #000000;

  --brand-blue: #1497e3;
  --brand-green: #68c949;

  /* Font family definitions */
  --font-sans: "Inter", ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif;
  --font-serif: ui-serif, Georgia, Cambria, "Times New Roman", Times, serif;
  --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;

  --gray-50: #fafafa;
  --gray-100: #f4f4f5;
  --gray-200: #e4e4e7;
  --gray-300: #d1d1d6;
  --gray-400: #b0b0b8;
  --gray-500: #8e8e98;
  --gray-600: #6e6e78;
  --gray-700: #4e4e58;
  --gray-800: #27272e;
  --gray-900: #1a1a1f;
  --gray-950: #060608;

  --slate-50: #f9fafb;
  --slate-100: #f1f3f5;
  --slate-200: #e2e6ea;
  --slate-300: #cdd3da;
  --slate-400: #aab3bd;
  --slate-500: #87939e;
  --slate-600: #66717c;
  --slate-700: #4b5762;
  --slate-800: #2c343d;
  --slate-900: #1f272f;
  --slate-950: #0f1214;

  --blue-50: #ecf6fe;
  --blue-100: #ddeffd;
  --blue-200: #c0e2fc;
  --blue-300: #78bcf0;
  --blue-400: #1a93ef;
  --blue-500: #007bd9;
  --blue-600: #005aa1;
  --blue-700: #004c87;
  --blue-800: #003e6e;
  --blue-900: #003054;
  --blue-950: #00213b;

  --green-50: #f0fcec;
  --green-100: #e3f8dc;
  --green-200: #c8f1bb;
  --green-300: #9fe38a;
  --green-400: #71ce53;
  --green-500: #52b434;
  --green-600: #3d8527;
  --green-700: #326b20;
  --green-800: #224916;
  --green-900: #132b0c;
  --green-950: #0a1706;

  --red-50: #ffedeb;
  --red-100: #ffdad6;
  --red-200: #fdc0b9;
  --red-300: #fa8c80;
  --red-400: #f35a49;
  --red-500: #e0230f;
  --red-600: #bb1d0c;
  --red-700: #8e180b;
  --red-800: #60130b;
  --red-900: #3a0d08;
  --red-950: #1e0805;

  --orange-50: #fff3eb;
  --orange-100: #ffe6d6;
  --orange-200: #fdd1b4;
  --orange-300: #f8b181;
  --orange-400: #f19150;
  --orange-500: #ed701d;
  --orange-600: #c15710;
  --orange-700: #934510;
  --orange-800: #62300e;
  --orange-900: #381c0a;
  --orange-950: #1d0f06;

  /* Font sizes */
  --text-xs: 0.6875rem; /* 11px */
  --text-sm: 0.75rem; /* 12px */
  --text-base: 0.8125rem; /* 13px */
  --text-md: 0.875rem; /* 14px */
  --text-lg: 1rem; /* 16px */
  --text-xl: 1.125rem; /* 18px */
  --text-2xl: 1.25rem; /* 20px */
  --text-3xl: 1.5rem; /* 24px */
  --text-4xl: 1.75rem; /* 28px */
  --text-5xl: 2rem; /* 32px */

  --background: var(--neutral-white);
  --foreground: var(--gray-950);

  --card: var(--gray-50);
  --card-foreground: var(--foreground);

  --popover: var(--gray-50);
  --popover-foreground: var(--foreground);

  --primary: var(--blue-500);
  --primary-foreground: var(--neutral-white);

  --secondary: var(--gray-100);
  --secondary-foreground: var(--gray-800);

  --muted: var(--gray-200);
  --muted-foreground: var(--gray-600);

  --accent: var(--blue-500);
  --accent-foreground: var(--neutral-white);

  --destructive: var(--red-500);
  --destructive-foreground: var(--neutral-white);

  --border: var(--gray-200);
  --input: var(--slate-300);
  --ring: var(--blue-400);

  /* Interactive element borders */
  --border-interactive: var(--slate-300);

  /* Alert variant colors for light mode */
  --info: var(--blue-50);
  --info-foreground: var(--blue-700);
  --info-border: var(--blue-200);
  --info-muted: var(--blue-600);

  --default: var(--slate-200);
  --default-foreground: var(--foreground);
  --default-border: var(--slate-300);
  --default-muted: var(--slate-600);

  --success: var(--green-50);
  --success-foreground: var(--green-700);
  --success-border: var(--green-200);
  --success-muted: var(--green-600);

  --warning: var(--orange-50);
  --warning-foreground: var(--orange-700);
  --warning-border: var(--orange-200);
  --warning-muted: var(--orange-600);

  --alert-destructive: var(--red-50);
  --alert-destructive-foreground: var(--red-700);
  --alert-destructive-border: var(--red-200);
  --alert-destructive-muted: var(--red-600);

  /* Button Component Variables */
  --button-primary: var(--primary);
  --button-primary-foreground: var(--primary-foreground);
  --button-primary-hover: var(--blue-600);

  --button-secondary: var(--secondary);
  --button-secondary-foreground: var(--secondary-foreground);
  --button-secondary-hover: var(--gray-200);
  --button-secondary-border: var(--border-interactive);

  --button-destructive: var(--destructive);
  --button-destructive-foreground: var(--destructive-foreground);
  --button-destructive-hover: var(--red-600);

  --button-outline: var(--secondary);
  --button-outline-foreground: var(--secondary-foreground);
  --button-outline-hover: var(--gray-200);
  --button-outline-border: var(--border-interactive);

  --button-ghost-hover: var(--gray-200);
  --button-ghost-hover-foreground: var(--accent-foreground);

  --button-link: var(--primary);
  --button-link-hover: var(--blue-600);


  --chart-1: var(--blue-500);
  --chart-2: var(--blue-400);
  --chart-3: var(--blue-300);
  --chart-4: var(--blue-200);
  --chart-5: var(--blue-100);

  --sidebar: var(--slate-800);
  --sidebar-foreground: var(--neutral-white);
  --sidebar-primary: var(--blue-500);
  --sidebar-primary-foreground: var(--neutral-white);
  --sidebar-accent: var(--slate-950);
  --sidebar-accent-foreground: var(--neutral-white);
  --sidebar-border: var(--slate-700);
  --sidebar-ring: var(--blue-400);

  --radius: 0.375rem; /* 4px */

  /* Surface Background Variables - Light Mode */
  --bg-surface-light: var(--gray-50);
  --bg-surface-medium: var(--gray-100);
  --bg-surface-dark: var(--gray-200);
}

.dark {
  --background: var(--neutral-black);
  --foreground: var(--neutral-white);

  --card: var(--gray-950);
  --card-foreground: var(--foreground);

  --popover: var(--gray-950);
  --popover-foreground: var(--foreground);

  --primary: var(--blue-500);
  --primary-foreground: var(--neutral-white);

  --secondary: var(--gray-900);
  --secondary-foreground: var(--gray-200);

  --muted: var(--gray-800);
  --muted-foreground: var(--gray-400);

  --accent: var(--blue-500);
  --accent-foreground: var(--neutral-white);

  --destructive: var(--red-500);
  --destructive-foreground: var(--neutral-white);

  --border: var(--gray-800);
  --input: var(--slate-700);
  --ring: var(--blue-600);

  /* Interactive element borders */
  --border-interactive: var(--slate-700);

  /* Alert variant colors for dark mode */
  --info: var(--blue-950);
  --info-foreground: var(--blue-300);
  --info-border: var(--blue-800);
  --info-muted: var(--blue-400);

  --default: var(--slate-800);
  --default-foreground: var(--foreground);
  --default-border: var(--slate-700);
  --default-muted: var(--slate-400);

  --success: var(--green-950);
  --success-foreground: var(--green-300);
  --success-border: var(--green-800);
  --success-muted: var(--green-400);

  --warning: var(--orange-950);
  --warning-foreground: var(--orange-300);
  --warning-border: var(--orange-800);
  --warning-muted: var(--orange-400);

  --alert-destructive: var(--red-950);
  --alert-destructive-foreground: var(--red-300);
  --alert-destructive-border: var(--red-800);
  --alert-destructive-muted: var(--red-400);

  /* Button Component Variables - Dark Mode */
  --button-primary: var(--primary);
  --button-primary-foreground: var(--primary-foreground);
  --button-primary-hover: var(--blue-400);

  --button-secondary: var(--secondary);
  --button-secondary-foreground: var(--secondary-foreground);
  --button-secondary-hover: var(--gray-800);
  --button-secondary-border: var(--border-interactive);

  --button-destructive: var(--destructive);
  --button-destructive-foreground: var(--destructive-foreground);
  --button-destructive-hover: var(--red-400);

  --button-outline: var(--secondary);
  --button-outline-foreground: var(--secondary-foreground);
  --button-outline-hover: var(--gray-800);
  --button-outline-border: var(--border-interactive);

  --button-ghost-hover: var(--gray-800);
  --button-ghost-hover-foreground: var(--accent-foreground);

  --button-link: var(--primary);
  --button-link-hover: var(--blue-400);

  --chart-1: var(--blue-500);
  --chart-2: var(--blue-400);
  --chart-3: var(--blue-300);
  --chart-4: var(--blue-200);
  --chart-5: var(--blue-100);

  --sidebar: var(--slate-800);
  --sidebar-foreground: var(--neutral-white);
  --sidebar-primary: var(--blue-500);
  --sidebar-primary-foreground: var(--neutral-white);
  --sidebar-accent: var(--slate-950);
  --sidebar-accent-foreground: var(--neutral-white);
  --sidebar-border: var(--slate-700);
  --sidebar-ring: var(--blue-400);

  --radius: 0.375rem;

  /* Surface Background Variables - Dark Mode */
  --bg-surface-light: var(--gray-950);
  --bg-surface-medium: var(--gray-900);
  --bg-surface-dark: var(--gray-800);
}

@theme inline {
  /* =============================================================================
   * CSS VARIABLE MAPPINGS - TAILWIND INTEGRATION
   * =============================================================================
   *
   * This section maps CSS custom properties to Tailwind utilities.
   * All color variables are defined in :root and .dark selectors above.
   *
   * ============================================================================= */

  /* Brand Colors */
  --color-neutral-white: var(--neutral-white);
  --color-neutral-black: var(--neutral-black);
  --color-brand-blue: var(--brand-blue);
  --color-brand-green: var(--brand-green);

  /* Gray Scale (50-950) */
  --color-gray-50: var(--gray-50);
  --color-gray-100: var(--gray-100);
  --color-gray-200: var(--gray-200);
  --color-gray-300: var(--gray-300);
  --color-gray-400: var(--gray-400);
  --color-gray-500: var(--gray-500);
  --color-gray-600: var(--gray-600);
  --color-gray-700: var(--gray-700);
  --color-gray-800: var(--gray-800);
  --color-gray-900: var(--gray-900);
  --color-gray-950: var(--gray-950);

  /* Slate Scale (50-950) */
  --color-slate-50: var(--slate-50);
  --color-slate-100: var(--slate-100);
  --color-slate-200: var(--slate-200);
  --color-slate-300: var(--slate-300);
  --color-slate-400: var(--slate-400);
  --color-slate-500: var(--slate-500);
  --color-slate-600: var(--slate-600);
  --color-slate-700: var(--slate-700);
  --color-slate-800: var(--slate-800);
  --color-slate-900: var(--slate-900);
  --color-slate-950: var(--slate-950);

  /* Blue Scale (50-950) */
  --color-blue-50: var(--blue-50);
  --color-blue-100: var(--blue-100);
  --color-blue-200: var(--blue-200);
  --color-blue-300: var(--blue-300);
  --color-blue-400: var(--blue-400);
  --color-blue-500: var(--blue-500);
  --color-blue-600: var(--blue-600);
  --color-blue-700: var(--blue-700);
  --color-blue-800: var(--blue-800);
  --color-blue-900: var(--blue-900);
  --color-blue-950: var(--blue-950);

  /* Green Scale (50-950) */
  --color-green-50: var(--green-50);
  --color-green-100: var(--green-100);
  --color-green-200: var(--green-200);
  --color-green-300: var(--green-300);
  --color-green-400: var(--green-400);
  --color-green-500: var(--green-500);
  --color-green-600: var(--green-600);
  --color-green-700: var(--green-700);
  --color-green-800: var(--green-800);
  --color-green-900: var(--green-900);
  --color-green-950: var(--green-950);

  /* Red Scale (50-950) */
  --color-red-50: var(--red-50);
  --color-red-100: var(--red-100);
  --color-red-200: var(--red-200);
  --color-red-300: var(--red-300);
  --color-red-400: var(--red-400);
  --color-red-500: var(--red-500);
  --color-red-600: var(--red-600);
  --color-red-700: var(--red-700);
  --color-red-800: var(--red-800);
  --color-red-900: var(--red-900);
  --color-red-950: var(--red-950);

  /* Orange Scale (50-950) */
  --color-orange-50: var(--orange-50);
  --color-orange-100: var(--orange-100);
  --color-orange-200: var(--orange-200);
  --color-orange-300: var(--orange-300);
  --color-orange-400: var(--orange-400);
  --color-orange-500: var(--orange-500);
  --color-orange-600: var(--orange-600);
  --color-orange-700: var(--orange-700);
  --color-orange-800: var(--orange-800);
  --color-orange-900: var(--orange-900);
  --color-orange-950: var(--orange-950);

  /* Semantic Colors */
  --color-background: var(--background);
  --color-foreground: var(--foreground);

  --color-primary: var(--primary);
  --color-primary-foreground: var(--primary-foreground);

  --color-secondary: var(--secondary);
  --color-secondary-foreground: var(--secondary-foreground);
  --color-accent: var(--accent);
  --color-accent-foreground: var(--accent-foreground);

  --color-muted: var(--muted);
  --color-muted-foreground: var(--muted-foreground);
  --color-card: var(--card);
  --color-card-foreground: var(--card-foreground);
  --color-popover: var(--popover);
  --color-popover-foreground: var(--popover-foreground);

  --color-border: var(--border);
  --color-input: var(--input);
  --color-ring: var(--ring);

  /* Interactive element borders */
  --color-border-interactive: var(--border-interactive);

  --color-destructive: var(--destructive);
  --color-destructive-foreground: var(--destructive-foreground);
  --color-destructive-border: var(--destructive-border);
  --color-destructive-muted: var(--destructive-muted);

  --color-primary: var(--primary);

  --color-info: var(--info);
  --color-info-foreground: var(--info-foreground);
  --color-info-border: var(--info-border);
  --color-info-muted: var(--info-muted);

  --color-default: var(--default);
  --color-default-foreground: var(--default-foreground);
  --color-default-border: var(--default-border);
  --color-default-muted: var(--default-muted);

  --color-success: var(--success);
  --color-success-foreground: var(--success-foreground);
  --color-success-border: var(--success-border);
  --color-success-muted: var(--success-muted);

  --color-warning: var(--warning);
  --color-warning-foreground: var(--warning-foreground);
  --color-warning-border: var(--warning-border);
  --color-warning-muted: var(--warning-muted);

  --color-alert-destructive: var(--alert-destructive);
  --color-alert-destructive-foreground: var(--alert-destructive-foreground);
  --color-alert-destructive-border: var(--alert-destructive-border);
  --color-alert-destructive-muted: var(--alert-destructive-muted);

  /* Button Colors */
  --color-button-primary: var(--button-primary);
  --color-button-primary-foreground: var(--button-primary-foreground);
  --color-button-primary-hover: var(--button-primary-hover);

  --color-button-secondary: var(--button-secondary);
  --color-button-secondary-foreground: var(--button-secondary-foreground);
  --color-button-secondary-hover: var(--button-secondary-hover);

  --color-button-destructive: var(--button-destructive);
  --color-button-destructive-foreground: var(--button-destructive-foreground);
  --color-button-destructive-hover: var(--button-destructive-hover);

  --color-button-outline: var(--button-outline);
  --color-button-outline-border: var(--button-outline-border);
  --color-button-outline-hover: var(--button-outline-hover);
  --color-button-outline-hover-foreground: var(--button-outline-hover-foreground);

  --color-button-ghost-hover: var(--button-ghost-hover);
  --color-button-ghost-hover-foreground: var(--button-ghost-hover-foreground);

  --color-button-link: var(--button-link);
  --color-button-link-hover: var(--button-link-hover);

  --color-chart-1: var(--chart-1);
  --color-chart-2: var(--chart-2);
  --color-chart-3: var(--chart-3);
  --color-chart-4: var(--chart-4);
  --color-chart-5: var(--chart-5);

  --color-sidebar: var(--sidebar);
  --color-sidebar-foreground: var(--sidebar-foreground);
  --color-sidebar-primary: var(--sidebar-primary);
  --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);
  --color-sidebar-accent: var(--sidebar-accent);
  --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);
  --color-sidebar-border: var(--sidebar-border);
  --color-sidebar-ring: var(--sidebar-ring);

  --font-sans: var(--font-sans);
  --font-serif: var(--font-serif);
  --font-mono: var(--font-mono);

  --text-xs: var(--text-xs);
  --text-sm: var(--text-sm);
  --text-base: var(--text-base);
  --text-md: var(--text-md);
  --text-lg: var(--text-lg);
  --text-xl: var(--text-xl);
  --text-2xl: var(--text-2xl);
  --text-3xl: var(--text-3xl);
  --text-4xl: var(--text-4xl);
  --text-5xl: var(--text-5xl);


  --radius-sm: calc(var(--radius) - 4px); /* 2px */
  --radius-md: calc(var(--radius) - 2px); /* 4px */
  --radius-lg: var(--radius); /* 6px */
  --radius-xl: calc(var(--radius) + 4px); /* 10px */

  --shadow-2xs: 0 1px 2px 0 rgb(0 0 0 / 0.05);
  --shadow-xs: 0 1px 2px 0 rgb(0 0 0 / 0.1);
  --shadow-sm: 0 1px 2px 0 rgb(0 0 0 / 0.05);
  --shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --shadow-md: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  --shadow-lg: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  --shadow-xl: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
  --shadow-2xl: 0 25px 50px -12px rgb(0 0 0 / 0.25);

  /* Utility classes */
  --border-interactive: var(--border-interactive);

}

@layer utilities {
  .border-interactive {
    border-color: var(--border-interactive);
  }

  /* Surface Background Utilities */
  .bg-surface-light {
    background-color: var(--bg-surface-light);
  }

  .bg-surface-medium {
    background-color: var(--bg-surface-medium);
  }

  .bg-surface-dark {
    background-color: var(--bg-surface-dark);
  }
}

