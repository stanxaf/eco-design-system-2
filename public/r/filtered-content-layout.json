{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "filtered-content-layout",
  "type": "registry:block",
  "title": "Filtered Content Layout",
  "description": "A two-panel layout with filtering capabilities - left panel for filters and controls, right panel for filtered content results",
  "registryDependencies": [
    "sidebar",
    "button",
    "panel",
    "header",
    "input",
    "select",
    "checkbox",
    "breadcrumb",
    "https://eco-design-system-2.vercel.app/r/styles/icons.json",
    "https://eco-design-system-2.vercel.app/r/components/logo.json",
    "https://eco-design-system-2.vercel.app/r/styles/sonner.json",
    "https://eco-design-system-2.vercel.app/r/components/panel.json",
    "https://eco-design-system-2.vercel.app/r/components/brand-header.json",
    "https://eco-design-system-2.vercel.app/r/components/brand-sidebar.json",
    "https://eco-design-system-2.vercel.app/r/themes/theme.json"
  ],
  "files": [
    {
      "path": "src/layouts/shell-layout.tsx",
      "content": "\"use client\";\n\nimport { Inter, Geist_Mono, Montserrat } from \"next/font/google\";\nimport React, { type ReactNode } from \"react\";\n\nimport { BrandHeader } from \"@/components/brand-header\";\nimport { BrandSidebar } from \"@/components/brand-sidebar\";\nimport { SidebarProvider } from \"@/components/ui/sidebar\";\nimport { Toaster } from \"@/components/ui/sonner\";\nimport { cn } from \"@/lib/utils\";\nimport { useIsMobile } from \"@/hooks/use-mobile\";\n\nimport \"@/app/globals.css\";\n\nconst InterSans = Inter({\n  subsets: [\"latin\"],\n  variable: \"--font-sans\",\n});\n\nconst GeistMono = Geist_Mono({\n  subsets: [\"latin\"],\n  variable: \"--font-mono\",\n});\n\nconst MontserratSerif = Montserrat({\n  subsets: [\"latin\"],\n  variable: \"--font-serif\",\n});\n\nexport default function ShellLayout({\n  children,\n}: Readonly<{\n  children: ReactNode;\n}>) {\n  const isMobile = useIsMobile();\n\n  return (\n    <html\n      lang=\"en\"\n      className={cn(\n        InterSans.variable,\n        GeistMono.variable,\n        MontserratSerif.variable,\n        \"bg-background text-foreground\",\n      )}\n    >\n      <body>\n        <SidebarProvider defaultOpen={false}>\n          {isMobile && <BrandHeader />}\n          <BrandSidebar />\n          <main className=\"flex w-full bg-surface-medium\">\n            <div className=\"w-full\">{children}</div>\n          </main>\n          <Toaster />\n        </SidebarProvider>\n      </body>\n    </html>\n  );\n}\n",
      "type": "registry:file",
      "target": "app/layout.tsx"
    },
    {
      "path": "src/app/demo/[name]/blocks/filtered-content-layout-page.tsx",
      "content": "\"use client\";\n\n/**\n * Filtered Content Layout Page Component\n *\n * A two-panel layout with filtering capabilities:\n * - Header with breadcrumbs for navigation\n * - Left panel (30%): Filter controls and search options\n * - Right panel (70%): Filtered content results\n * - Responsive design - panels stack vertically on mobile\n * - Uses Panel component from the design system\n *\n * This component provides a flexible foundation for applications\n * that need filtering capabilities like search results, product catalogs,\n * data tables, or any content that requires filtering and sorting.\n *\n * @returns JSX element with filtered content layout\n */\nimport { Panel } from \"@/components/panel\";\nimport { Header } from \"@/components/ui/header\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { Label } from \"@/components/ui/label\";\nimport { Slider } from \"@/components/ui/slider\";\nimport { SidebarInset } from \"@/components/ui/sidebar\";\nimport { Toaster } from \"@/components/ui/sonner\";\nimport { Inbox } from \"lucide-react\";\nimport { useState } from \"react\";\n\nexport default function FilteredContentLayoutPage() {\n  const [isLeftPanelOpen, setIsLeftPanelOpen] = useState(true);\n\n  return (\n    <div className=\"w-full h-screen flex flex-col\">\n      {/* Header with breadcrumbs */}\n      <Header\n        leftContent={\n          <div className=\"flex items-center space-x-2\">\n            <Button\n              variant={isLeftPanelOpen ? \"secondary\" : \"ghost\"}\n              size=\"icon\"\n              onClick={() => setIsLeftPanelOpen(!isLeftPanelOpen)}\n            >\n              <Inbox className=\"h-4 w-4\" />\n            </Button>\n            <div className=\"flex items-center\">\n              <span className=\"text-sm text-muted-foreground\">Home</span>\n              <span className=\"mx-2 text-muted-foreground\">/</span>\n              <span className=\"text-sm font-medium\">Filtered Content</span>\n            </div>\n          </div>\n        }\n        rightContent={\n          <Button variant=\"outline\">\n            Export Results\n          </Button>\n        }\n      />\n\n      {/* Two Panel Layout */}\n      <div className=\"flex flex-col md:flex-row flex-1 overflow-hidden\">\n        {/* Left Panel - Filters & Controls (max 280px width) */}\n        <div className={`transition-all duration-300 ease-in-out ${isLeftPanelOpen ? 'w-full md:max-w-[280px] md:w-[280px] opacity-100' : 'w-0 max-w-0 opacity-0 overflow-hidden'}`}>\n          <Panel\n          size=\"fit\"\n          responsive={{ md: \"fit\" }}\n          title=\"Filters & Controls\"\n          height=\"full\"\n          className=\"w-full md:max-w-[280px] md:w-[280px] flex-shrink-0\"\n          footer={\n            <div className=\"flex justify-between items-center w-full\">\n              <div className=\"flex items-center space-x-1\">\n                <span className=\"text-sm text-muted-foreground\">5 items selected</span>\n                <svg className=\"w-3 h-3 text-muted-foreground\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 9l4-4 4 4m0 6l-4 4-4-4\" />\n                </svg>\n              </div>\n              <Button variant=\"ghost\" size=\"sm\">Clear filter</Button>\n            </div>\n          }\n        >\n          <div className=\"space-y-6 pb-4\">\n            {/* Search Input */}\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"search\">Search</Label>\n              <div className=\"relative\">\n                <Input\n                  id=\"search\"\n                  placeholder=\"Search\"\n                  className=\"w-full pr-8\"\n                />\n                <svg className=\"absolute right-2 top-1/2 transform -translate-y-1/2 w-4 h-4 text-muted-foreground\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n                </svg>\n              </div>\n            </div>\n\n            {/* State Selection */}\n            <div className=\"space-y-2\">\n              <Label>State</Label>\n              <Select defaultValue=\"iowa\">\n                <SelectTrigger className=\"w-full\">\n                  <SelectValue placeholder=\"Select state\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"iowa\">Iowa</SelectItem>\n                  <SelectItem value=\"illinois\">Illinois</SelectItem>\n                  <SelectItem value=\"indiana\">Indiana</SelectItem>\n                  <SelectItem value=\"ohio\">Ohio</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n\n            {/* Target Persona */}\n            <div className=\"space-y-3\">\n              <Label className=\"text-base font-medium\">Target Persona</Label>\n              <div className=\"space-y-2\">\n                <div className=\"flex items-center space-x-2\">\n                  <Checkbox id=\"ag-tech-leader\" defaultChecked />\n                  <Label htmlFor=\"ag-tech-leader\" className=\"text-sm\">Ag Tech Leader</Label>\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <Checkbox id=\"brand-loyalist\" />\n                  <Label htmlFor=\"brand-loyalist\" className=\"text-sm\">Brand Loyalist</Label>\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <Checkbox id=\"sustainable-fashion\" />\n                  <Label htmlFor=\"sustainable-fashion\" className=\"text-sm\">Sustainable Fashion Advocate</Label>\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <Checkbox id=\"digital-marketing\" />\n                  <Label htmlFor=\"digital-marketing\" className=\"text-sm\">Digital Marketing Innovator</Label>\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <Checkbox id=\"remote-work\" />\n                  <Label htmlFor=\"remote-work\" className=\"text-sm\">Remote Work Enthusiast</Label>\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <Checkbox id=\"health-wellness\" />\n                  <Label htmlFor=\"health-wellness\" className=\"text-sm\">Health and Wellness Guru</Label>\n                </div>\n              </div>\n            </div>\n\n            {/* Preferred Contact Method */}\n            <div className=\"space-y-3\">\n              <Label className=\"text-base font-medium\">Preferred Contact Method</Label>\n              <div className=\"space-y-2\">\n                <div className=\"flex items-center space-x-2\">\n                  <Checkbox id=\"phone\" defaultChecked />\n                  <Label htmlFor=\"phone\" className=\"text-sm\">Phone number</Label>\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <Checkbox id=\"email\" />\n                  <Label htmlFor=\"email\" className=\"text-sm\">Email</Label>\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <Checkbox id=\"company\" />\n                  <Label htmlFor=\"company\" className=\"text-sm\">Company name</Label>\n                </div>\n              </div>\n            </div>\n\n            {/* Role Selection */}\n            <div className=\"space-y-2\">\n              <Label className=\"text-base font-medium\">Role</Label>\n              <Select>\n                <SelectTrigger className=\"w-full\">\n                  <SelectValue placeholder=\"Select\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"farmer\">Farmer</SelectItem>\n                  <SelectItem value=\"manager\">Farm Manager</SelectItem>\n                  <SelectItem value=\"consultant\">Agricultural Consultant</SelectItem>\n                  <SelectItem value=\"researcher\">Researcher</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n\n            {/* Planted Area */}\n            <div className=\"space-y-4\">\n              <Label className=\"text-base font-medium\">Planted Area</Label>\n\n              <div className=\"space-y-2\">\n                <Label className=\"text-sm\">Crop</Label>\n                <Select defaultValue=\"all\">\n                  <SelectTrigger className=\"w-full\">\n                    <SelectValue placeholder=\"Select crop\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"all\">All Crops</SelectItem>\n                    <SelectItem value=\"corn\">Corn</SelectItem>\n                    <SelectItem value=\"soybeans\">Soybeans</SelectItem>\n                    <SelectItem value=\"wheat\">Wheat</SelectItem>\n                    <SelectItem value=\"cotton\">Cotton</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label className=\"text-sm\">Acres Planted</Label>\n                <div className=\"px-2\">\n                  <div className=\"text-sm text-muted-foreground mb-2\">100 to 250</div>\n                  <Slider\n                    defaultValue={[100, 250]}\n                    max={500}\n                    step={10}\n                    className=\"w-full\"\n                  />\n                  <div className=\"flex justify-between text-xs text-muted-foreground mt-1\">\n                    <span>0</span>\n                    <span>500</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Farm Revenue */}\n            <div className=\"space-y-4\">\n              <Label className=\"text-base font-medium\">Farm Revenue</Label>\n\n              <div className=\"space-y-2\">\n                <Label className=\"text-sm\">Revenue Type</Label>\n                <Select defaultValue=\"total\">\n                  <SelectTrigger className=\"w-full\">\n                    <SelectValue placeholder=\"Select type\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"total\">Total</SelectItem>\n                    <SelectItem value=\"gross\">Gross</SelectItem>\n                    <SelectItem value=\"net\">Net</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label className=\"text-sm\">Revenue Range</Label>\n                <div className=\"px-2\">\n                  <div className=\"text-sm text-muted-foreground mb-2\">100 to 600</div>\n                  <Slider\n                    defaultValue={[100, 600]}\n                    max={1500}\n                    step={50}\n                    className=\"w-full\"\n                  />\n                  <div className=\"flex justify-between text-xs text-muted-foreground mt-1\">\n                    <span>0</span>\n                    <span>1500</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Farm Manager Type */}\n            <div className=\"space-y-2\">\n              <Label className=\"text-base font-medium\">Farm Manager Type</Label>\n              <Select>\n                <SelectTrigger className=\"w-full\">\n                  <SelectValue placeholder=\"Select Farm Manager\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"owner-operator\">Owner/Operator</SelectItem>\n                  <SelectItem value=\"hired-manager\">Hired Manager</SelectItem>\n                  <SelectItem value=\"family-member\">Family Member</SelectItem>\n                  <SelectItem value=\"consultant\">Consultant</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n\n            {/* Gross Farm Income */}\n            <div className=\"space-y-4\">\n              <Label className=\"text-base font-medium\">Gross Farm Income</Label>\n              <div className=\"grid grid-cols-2 gap-3\">\n                <div className=\"space-y-1\">\n                  <Label className=\"text-sm\">Min.</Label>\n                  <div className=\"relative\">\n                    <Input\n                      type=\"number\"\n                      placeholder=\"0\"\n                      className=\"pr-12\"\n                    />\n                    <span className=\"absolute right-2 top-1/2 transform -translate-y-1/2 text-xs text-muted-foreground\">USD</span>\n                  </div>\n                </div>\n                <div className=\"space-y-1\">\n                  <Label className=\"text-sm\">Max.</Label>\n                  <div className=\"relative\">\n                    <Input\n                      type=\"number\"\n                      placeholder=\"0\"\n                      className=\"pr-12\"\n                    />\n                    <span className=\"absolute right-2 top-1/2 transform -translate-y-1/2 text-xs text-muted-foreground\">USD</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Apply Filter Button */}\n            <Button className=\"w-full\">\n              Apply Filter\n            </Button>\n\n          </div>\n        </Panel>\n        </div>\n\n        {/* Right Panel - Content Results (70% width) */}\n        <Panel\n          size=\"full\"\n          responsive={{ md: \"full\" }}\n          title=\"Content Results\"\n          height=\"full\"\n          className=\"w-full md:w-[70%] flex-1\"\n          borderRight={false}\n          footer={\n            <div className=\"flex justify-between items-center w-full\">\n              <span className=\"text-sm text-muted-foreground\">Showing 1-10 of 47 results</span>\n              <div className=\"flex space-x-2\">\n                <Button variant=\"outline\" size=\"sm\">Previous</Button>\n                <Button variant=\"outline\" size=\"sm\">Next</Button>\n              </div>\n            </div>\n          }\n        >\n          {/* Content area - ready for your filtered results */}\n          <div className=\"flex items-center justify-center h-full text-muted-foreground\">\n            <p>Content area - ready for your filtered results</p>\n          </div>\n        </Panel>\n      </div>\n      <Toaster />\n    </div>\n  );\n}",
      "type": "registry:page",
      "target": "app/page.tsx"
    },
    {
      "path": "src/components/panel.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { cn } from \"@/lib/utils\";\nimport { Button } from \"@/components/ui/button\";\n// Removed external component imports for v0 compatibility\n\n/**\n * Panel component for creating flexible layouts with header, content, and footer areas.\n *\n * Features:\n * - Responsive sizing with flexible column system\n * - Header with title and action button\n * - Content area with proper spacing\n * - Footer with status information\n * - Customizable alignment and justification\n * - Border and styling options\n *\n * @example\n * ```tsx\n * // Basic panel with default 100% height (fills parent container)\n * <Panel size=\"4\" title=\"My Panel\" footer={<span>Status: Active</span>}>\n *   <div>Panel content goes here</div>\n * </Panel>\n *\n * // Panel with full screen height (100vh)\n * <Panel height=\"screen\" title=\"My Panel\">\n *   <div>Panel content goes here</div>\n * </Panel>\n *\n * // Panel with custom header and full height\n * <Panel height=\"full\" header={\n *   <div className=\"flex items-center justify-between w-full\">\n *     <h6>Custom Header</h6>\n *     <Button size=\"sm\">Action</Button>\n *   </div>\n * }>\n *   <div>Panel content with custom header</div>\n * </Panel>\n *\n * // Panel with responsive sizing and full height\n * <Panel\n *   size=\"6\"\n *   height=\"full\"\n *   responsive={{ md: \"4\", lg: \"3\" }}\n *   title=\"Responsive Panel\"\n * >\n *   <div>Content adapts to screen size</div>\n * </Panel>\n * ```\n */\n\ntype ColumnSize = \"auto\" | \"1\" | \"2\" | \"3\" | \"4\" | \"5\" | \"6\" | \"12\" | \"full\" | \"fit\";\n\n/**\n * Props for the Panel component\n */\ninterface PanelProps {\n  /** Sizing */\n  /** Panel size using flexible column system */\n  size?: ColumnSize;\n  /** Responsive sizing for different breakpoints */\n  responsive?: {\n    sm?: ColumnSize;\n    md?: ColumnSize;\n    lg?: ColumnSize;\n    xl?: ColumnSize;\n  };\n\n  /** Layout */\n  /** Vertical alignment of panel content */\n  align?: \"start\" | \"center\" | \"end\" | \"stretch\";\n  /** Horizontal justification of panel content */\n  justify?: \"start\" | \"center\" | \"end\" | \"between\" | \"around\" | \"evenly\";\n\n  /** Content areas */\n  /** Panel title displayed in header */\n  title?: string;\n  /** Custom header content (overrides title) */\n  header?: React.ReactNode;\n  /** Whether to hide the header completely */\n  hideHeader?: boolean;\n  /** Main panel content */\n  children?: React.ReactNode;\n  /** Footer content with status information */\n  footer?: React.ReactNode;\n  /** Whether to hide the footer completely */\n  hideFooter?: boolean;\n\n  /** Styling */\n  /** Whether to show right border */\n  borderRight?: boolean;\n  /** Height behavior: 'screen' for 100vh, 'full' for 100% of parent */\n  height?: \"screen\" | \"full\";\n  /** Additional CSS classes */\n  className?: string;\n}\n\nconst sizeClasses = {\n  auto: \"flex-auto\",\n  \"1\": \"flex-[0_0_8.333333%]\",\n  \"2\": \"flex-[0_0_16.666667%]\",\n  \"3\": \"flex-[0_0_25%]\",\n  \"4\": \"flex-[0_0_33.333333%]\",\n  \"5\": \"flex-[0_0_41.666667%]\",\n  \"6\": \"flex-[0_0_50%]\",\n  \"12\": \"flex-[0_0_100%]\",\n  full: \"flex-1\",\n  fit: \"flex-none\",\n};\n\nconst alignClasses = {\n  start: \"items-start\",\n  center: \"items-center\",\n  end: \"items-end\",\n  stretch: \"items-stretch\",\n};\n\nconst justifyClasses = {\n  start: \"justify-start\",\n  center: \"justify-center\",\n  end: \"justify-end\",\n  between: \"justify-between\",\n  around: \"justify-around\",\n  evenly: \"justify-evenly\",\n};\n\nconst getResponsiveClasses = (responsive?: PanelProps[\"responsive\"]) => {\n  if (!responsive) return \"\";\n\n  const classes: string[] = [];\n\n  if (responsive.sm) classes.push(`sm:${sizeClasses[responsive.sm]}`);\n  if (responsive.md) classes.push(`md:${sizeClasses[responsive.md]}`);\n  if (responsive.lg) classes.push(`lg:${sizeClasses[responsive.lg]}`);\n  if (responsive.xl) classes.push(`xl:${sizeClasses[responsive.xl]}`);\n\n  return classes.join(\" \");\n};\n\n/**\n * Panel component for creating flexible layouts with header, content, and footer areas.\n *\n * @param props - Panel component props\n * @returns JSX element\n */\nexport function Panel({\n  size = \"auto\",\n  responsive,\n  align = \"stretch\",\n  justify = \"start\",\n  title = \"Panel\",\n  header,\n  hideHeader = false,\n  children,\n  footer,\n  hideFooter = false,\n  borderRight = true,\n  height = \"full\",\n  className,\n  ...props\n}: PanelProps) {\n  const baseSizeClass = sizeClasses[size];\n  const responsiveClasses = getResponsiveClasses(responsive);\n\n  // Determine height class based on height prop\n  const heightClass = height === \"screen\" ? \"h-screen\" : \"h-full\";\n\n  return (\n    <div\n      className={cn(\n        \"relative flex flex-col\",\n        heightClass,\n        borderRight && \"border-r border-border\",\n        baseSizeClass,\n        responsiveClasses,\n        alignClasses[align],\n        justifyClasses[justify],\n        className\n      )}\n      {...props}\n    >\n      {!hideHeader && (\n        <div className=\"absolute top-0 left-0 right-0 z-10 flex w-full h-12 px-3 py-2 justify-between items-center border-b border-border bg-background shadow-sm\">\n          {header ? (\n            header\n          ) : (\n            <>\n              <h6>{title}</h6>\n              <Button variant=\"ghost\" size=\"icon\">\n                <svg className=\"size-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z\" />\n                </svg>\n              </Button>\n            </>\n          )}\n        </div>\n      )}\n\n      {children && (\n        <div className={cn(\n          \"flex-1 w-full p-3 items-start self-stretch bg-background overflow-y-auto\",\n          !hideHeader && \"pt-12\", // 48px for header + 12px spacing\n          !hideHeader && \"pt-[60px]\", // 48px for header + 12px spacing\n          hideHeader && \"pt-0\", // No top padding when header is hidden\n          !hideFooter && footer && \"pb-12\", // Bottom padding only when footer exists and not hidden\n          hideFooter && \"pb-0\" // No bottom padding when footer is hidden\n        )}>\n          {children}\n        </div>\n      )}\n\n      {!hideFooter && footer && (\n        <div className=\"absolute bottom-0 left-0 right-0 z-10 flex w-full h-12 min-h-10 px-3 py-2 justify-between items-center border-t border-border bg-background text-muted-foreground text-sm\">\n          {footer}\n        </div>\n      )}\n    </div>\n  );\n}",
      "type": "registry:component"
    }
  ]
}