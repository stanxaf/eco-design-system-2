{
  "name": "typography",
  "type": "registry:ui",
  "title": "Typography",
  "description": "A collection of typography components",
  "registryDependencies": [
    "https://eco-design-system-2.vercel.app/r/themes/theme.json"
  ],
  "files": [
    {
      "path": "src/app/demo/[name]/ui/typography.tsx",
      "type": "registry:component",
      "content": "import { cn } from \"@/lib/utils\";\nimport type { ReactNode } from \"react\";\n\n/**\n * Typography components for consistent text styling\n *\n * Provides a collection of typography components that follow design system\n * principles for consistent text rendering across the application.\n */\n\ninterface TypographyProps {\n  children: ReactNode;\n  className?: string;\n}\n\n/**\n * Large heading component\n */\nexport function TypographyH1({ children, className }: TypographyProps) {\n  return (\n    <h1\n      className={cn(\n        \"scroll-m-20 text-4xl font-extrabold tracking-tight lg:text-5xl\",\n        className\n      )}\n    >\n      {children}\n    </h1>\n  );\n}\n\n/**\n * Secondary heading component\n */\nexport function TypographyH2({ children, className }: TypographyProps) {\n  return (\n    <h2\n      className={cn(\n        \"scroll-m-20 border-b pb-2 text-3xl font-semibold tracking-tight first:mt-0\",\n        className\n      )}\n    >\n      {children}\n    </h2>\n  );\n}\n\n/**\n * Tertiary heading component\n */\nexport function TypographyH3({ children, className }: TypographyProps) {\n  return (\n    <h3\n      className={cn(\n        \"scroll-m-20 text-2xl font-semibold tracking-tight\",\n        className\n      )}\n    >\n      {children}\n    </h3>\n  );\n}\n\n/**\n * Fourth level heading component\n */\nexport function TypographyH4({ children, className }: TypographyProps) {\n  return (\n    <h4\n      className={cn(\n        \"scroll-m-20 text-xl font-semibold tracking-tight\",\n        className\n      )}\n    >\n      {children}\n    </h4>\n  );\n}\n\n/**\n * Paragraph text component\n */\nexport function TypographyP({ children, className }: TypographyProps) {\n  return (\n    <p className={cn(\"leading-7 [&:not(:first-child)]:mt-6\", className)}>\n      {children}\n    </p>\n  );\n}\n\n/**\n * Blockquote component\n */\nexport function TypographyBlockquote({ children, className }: TypographyProps) {\n  return (\n    <blockquote\n      className={cn(\"mt-6 border-l-2 pl-6 italic\", className)}\n    >\n      {children}\n    </blockquote>\n  );\n}\n\n/**\n * List component\n */\nexport function TypographyUl({ children, className }: TypographyProps) {\n  return (\n    <ul className={cn(\"my-6 ml-6 list-disc [&>li]:mt-2\", className)}>\n      {children}\n    </ul>\n  );\n}\n\n/**\n * Ordered list component\n */\nexport function TypographyOl({ children, className }: TypographyProps) {\n  return (\n    <ol className={cn(\"my-6 ml-6 list-decimal [&>li]:mt-2\", className)}>\n      {children}\n    </ol>\n  );\n}\n\n/**\n * List item component\n */\nexport function TypographyLi({ children, className }: TypographyProps) {\n  return (\n    <li className={cn(\"mt-2\", className)}>\n      {children}\n    </li>\n  );\n}\n\n/**\n * Code inline component\n */\nexport function TypographyCode({ children, className }: TypographyProps) {\n  return (\n    <code\n      className={cn(\n        \"relative rounded bg-muted px-[0.3rem] py-[0.2rem] font-mono text-sm font-semibold\",\n        className\n      )}\n    >\n      {children}\n    </code>\n  );\n}\n\n/**\n * Code block component\n */\nexport function TypographyPre({ children, className }: TypographyProps) {\n  return (\n    <pre\n      className={cn(\n        \"mb-4 mt-6 overflow-x-auto rounded-lg border bg-muted p-4\",\n        className\n      )}\n    >\n      <code>{children}</code>\n    </pre>\n  );\n}\n\n/**\n * Lead text component for introductory text\n */\nexport function TypographyLead({ children, className }: TypographyProps) {\n  return (\n    <p className={cn(\"text-xl text-muted-foreground\", className)}>\n      {children}\n    </p>\n  );\n}\n\n/**\n * Large text component\n */\nexport function TypographyLarge({ children, className }: TypographyProps) {\n  return (\n    <div className={cn(\"text-lg font-semibold\", className)}>\n      {children}\n    </div>\n  );\n}\n\n/**\n * Small text component\n */\nexport function TypographySmall({ children, className }: TypographyProps) {\n  return (\n    <small className={cn(\"text-sm font-medium leading-none\", className)}>\n      {children}\n    </small>\n  );\n}\n\n/**\n * Muted text component\n */\nexport function TypographyMuted({ children, className }: TypographyProps) {\n  return (\n    <p className={cn(\"text-sm text-muted-foreground\", className)}>\n      {children}\n    </p>\n  );\n}\n\n/**\n * Main typography component that exports all variants\n */\nexport const Typography = {\n  H1: TypographyH1,\n  H2: TypographyH2,\n  H3: TypographyH3,\n  H4: TypographyH4,\n  P: TypographyP,\n  Blockquote: TypographyBlockquote,\n  Ul: TypographyUl,\n  Ol: TypographyOl,\n  Li: TypographyLi,\n  Code: TypographyCode,\n  Pre: TypographyPre,\n  Lead: TypographyLead,\n  Large: TypographyLarge,\n  Small: TypographySmall,\n  Muted: TypographyMuted,\n};\n\n/**\n * Example usage:\n *\n * ```tsx\n * import { Typography } from \"@/components/ui/typography\";\n *\n * export function Example() {\n *   return (\n *     <div>\n *       <Typography.H1>Main Heading</Typography.H1>\n *       <Typography.P>This is a paragraph with some text.</Typography.P>\n *       <Typography.Code>const example = \"code\";</Typography.Code>\n *       <Typography.Blockquote>\n *         This is a blockquote with important information.\n *       </Typography.Blockquote>\n *     </div>\n *   );\n * }\n * ```\n */\n"
    }
  ]
}