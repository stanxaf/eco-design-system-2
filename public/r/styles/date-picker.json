{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "date-picker",
  "type": "registry:ui",
  "title": "Date Picker",
  "description": "A date picker component with single date and date range selection capabilities.",
  "dependencies": [
    "date-fns"
  ],
  "registryDependencies": [
    "button",
    "calendar",
    "popover",
    "https://eco-design-system-2.vercel.app/r/themes/theme.json"
  ],
  "files": [
    {
      "path": "src/components/ui/date-picker.tsx",
      "content": "\"use client\";\n\nimport { format } from \"date-fns\";\nimport { CalendarIcon } from \"lucide-react\";\nimport * as React from \"react\";\nimport type { DateRange } from \"react-day-picker\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Calendar } from \"@/components/ui/calendar\";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\";\nimport { cn } from \"@/lib/utils\";\n\n/**\n * Date Picker component with single date and date range selection capabilities.\n *\n * **IMPORTANT FOR v0: This component uses date-picker-specific CSS variables.\n * DO NOT use generic variables like --primary, --secondary, etc.\n * ONLY use the --date-picker-* variables listed below.**\n *\n * **Available Components:**\n * - `DatePicker`: Single date selection with calendar popover\n * - `DateRangePicker`: Date range selection with dual calendar support\n *\n * **CSS Variables Used:**\n * - Background: --date-picker-background, --date-picker-foreground\n * - Border: --date-picker-border, --date-picker-border-hover\n * - Calendar: --date-picker-calendar-background, --date-picker-calendar-foreground\n * - Selected: --date-picker-selected, --date-picker-selected-foreground\n * - Hover: --date-picker-hover, --date-picker-hover-foreground\n *\n * **Features:**\n * - Single date selection with formatted display\n * - Date range selection with dual calendar\n * - Customizable placeholder text\n * - Disabled state support\n * - Keyboard navigation support\n * - Accessibility compliant with proper ARIA attributes\n * - Responsive design with mobile-friendly layout\n * - Dark mode support with theme-aware colors\n *\n * **v0 Usage Rules:**\n * 1. ALWAYS use the date-picker-specific CSS variables (--date-picker-*)\n * 2. NEVER use generic variables (--primary, --secondary, etc.)\n * 3. Use proper TypeScript interfaces for type safety\n * 4. Include proper accessibility attributes\n * 5. Handle disabled states appropriately\n * 6. Use consistent naming conventions\n */\n\nexport interface DatePickerProps {\n  date?: Date;\n  onDateChange?: (date: Date | undefined) => void;\n  placeholder?: string;\n  className?: string;\n  disabled?: boolean;\n}\n\nexport function DatePicker({\n  date,\n  onDateChange,\n  placeholder = \"Pick a date\",\n  className,\n  disabled = false,\n}: DatePickerProps) {\n  return (\n    <Popover>\n      <PopoverTrigger asChild>\n        <Button\n          variant=\"outline\"\n          className={cn(\n            \"w-[280px] justify-start text-left font-normal\",\n            !date && \"text-muted-foreground\",\n            className,\n          )}\n          disabled={disabled}\n          data-slot=\"date-picker-trigger\"\n          aria-label=\"Select date\"\n        >\n          <CalendarIcon className=\"mr-2 h-4 w-4\" />\n          {date ? format(date, \"PPP\") : <span>{placeholder}</span>}\n        </Button>\n      </PopoverTrigger>\n      <PopoverContent\n        className=\"w-auto p-0\"\n        align=\"start\"\n        data-slot=\"date-picker-content\"\n      >\n        <Calendar\n          mode=\"single\"\n          selected={date}\n          onSelect={onDateChange}\n          initialFocus\n          data-slot=\"date-picker-calendar\"\n        />\n      </PopoverContent>\n    </Popover>\n  );\n}\n\nexport interface DateRangePickerProps {\n  dateRange?: DateRange;\n  onDateRangeChange?: (range: DateRange | undefined) => void;\n  placeholder?: string;\n  className?: string;\n  disabled?: boolean;\n}\n\nexport function DateRangePicker({\n  dateRange,\n  onDateRangeChange,\n  placeholder = \"Pick a date range\",\n  className,\n  disabled = false,\n}: DateRangePickerProps) {\n  return (\n    <Popover>\n      <PopoverTrigger asChild>\n        <Button\n          variant=\"outline\"\n          className={cn(\n            \"w-[280px] justify-start text-left font-normal\",\n            !dateRange?.from && \"text-muted-foreground\",\n            className,\n          )}\n          disabled={disabled}\n          data-slot=\"date-range-picker-trigger\"\n          aria-label=\"Select date range\"\n        >\n          <CalendarIcon className=\"mr-2 h-4 w-4\" />\n          {dateRange?.from ? (\n            dateRange.to ? (\n              <>\n                {format(dateRange.from, \"LLL dd, y\")} -{\" \"}\n                {format(dateRange.to, \"LLL dd, y\")}\n              </>\n            ) : (\n              format(dateRange.from, \"LLL dd, y\")\n            )\n          ) : (\n            <span>{placeholder}</span>\n          )}\n        </Button>\n      </PopoverTrigger>\n      <PopoverContent\n        className=\"w-auto p-0\"\n        align=\"start\"\n        data-slot=\"date-range-picker-content\"\n      >\n        <Calendar\n          mode=\"range\"\n          defaultMonth={dateRange?.from}\n          selected={dateRange}\n          onSelect={onDateRangeChange}\n          numberOfMonths={2}\n          initialFocus\n          data-slot=\"date-range-picker-calendar\"\n        />\n      </PopoverContent>\n    </Popover>\n  );\n}\n",
      "type": "registry:component"
    }
  ]
}