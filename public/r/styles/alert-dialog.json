{
  "name": "alert-dialog",
  "type": "registry:ui",
  "title": "Alert Dialog",
  "description": "A modal dialog that interrupts the user with important content and expects a response.",
  "registryDependencies": [
    "https://eco-design-system-2.vercel.app/r/styles/alert-dialog.json",
    "https://eco-design-system-2.vercel.app/r/themes/theme.json"
  ],
  "files": [
    {
      "path": "src/components/ui/alert-dialog.tsx",
      "type": "registry:component",
      "content": "\"use client\";\n\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\";\nimport type * as React from \"react\";\n\nimport { buttonVariants } from \"@/components/ui/button\";\nimport { cn } from \"@/lib/utils\";\n\n/**\n * Alert Dialog component system for building accessible modal dialogs.\n *\n * **Component Architecture:**\n * - **AlertDialog**: Root component that manages dialog state\n * - **AlertDialogTrigger**: Button/element that opens the dialog\n * - **AlertDialogPortal**: Renders dialog outside normal DOM flow\n * - **AlertDialogOverlay**: Backdrop overlay with animations\n * - **AlertDialogContent**: Main dialog container with animations\n * - **AlertDialogHeader**: Title and description container\n * - **AlertDialogFooter**: Action buttons container\n * - **AlertDialogTitle**: Dialog heading with semantic markup\n * - **AlertDialogDescription**: Dialog content with proper styling\n * - **AlertDialogAction**: Primary action button (uses button variants)\n * - **AlertDialogCancel**: Secondary cancel button (outline variant)\n *\n * **Features:**\n * - Modal behavior with focus management\n * - Smooth animations (fade in/out, zoom in/out)\n * - Responsive design (mobile-first approach)\n * - Accessibility via Radix UI primitives\n * - Button integration with variant system\n * - Portal rendering for proper z-index handling\n *\n * **Usage Example:**\n * ```tsx\n * <AlertDialog>\n *   <AlertDialogTrigger asChild>\n *     <Button variant=\"outline\">Delete Account</Button>\n *   </AlertDialogTrigger>\n *   <AlertDialogContent>\n *     <AlertDialogHeader>\n *       <AlertDialogTitle>Are you sure?</AlertDialogTitle>\n *       <AlertDialogDescription>\n *         This action cannot be undone.\n *       </AlertDialogDescription>\n *     </AlertDialogHeader>\n *     <AlertDialogFooter>\n *       <AlertDialogCancel>Cancel</AlertDialogCancel>\n *       <AlertDialogAction>Delete</AlertDialogAction>\n *     </AlertDialogFooter>\n *   </AlertDialogContent>\n * </AlertDialog>\n * ```\n */\nfunction AlertDialog({\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Root>) {\n  return <AlertDialogPrimitive.Root data-slot=\"alert-dialog\" {...props} />;\n}\n\n/**\n * Trigger component that opens the alert dialog.\n * Use with asChild to render as any element (Button, Link, etc.).\n */\nfunction AlertDialogTrigger({\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Trigger>) {\n  return (\n    <AlertDialogPrimitive.Trigger data-slot=\"alert-dialog-trigger\" {...props} />\n  );\n}\n\n/**\n * Portal component that renders the dialog outside the normal DOM flow.\n * Ensures proper z-index stacking and accessibility.\n */\nfunction AlertDialogPortal({\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Portal>) {\n  return (\n    <AlertDialogPrimitive.Portal data-slot=\"alert-dialog-portal\" {...props} />\n  );\n}\n\n/**\n * Overlay component that provides the backdrop and handles click-outside behavior.\n * Includes fade animations and proper z-index positioning.\n */\nfunction AlertDialogOverlay({\n  className,\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Overlay>) {\n  return (\n    <AlertDialogPrimitive.Overlay\n      data-slot=\"alert-dialog-overlay\"\n      className={cn(\n        \"data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50 data-[state=closed]:animate-out data-[state=open]:animate-in\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\n/**\n * Content container for the dialog with animations and responsive positioning.\n * Automatically includes Portal and Overlay for proper modal behavior.\n */\nfunction AlertDialogContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Content>) {\n  return (\n    <AlertDialogPortal>\n      <AlertDialogOverlay />\n      <AlertDialogPrimitive.Content\n        data-slot=\"alert-dialog-content\"\n        className={cn(\n          \"data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-md bg-background p-6 shadow-lg duration-200 data-[state=closed]:animate-out data-[state=open]:animate-in sm:max-w-md\",\n          className,\n        )}\n        {...props}\n      />\n    </AlertDialogPortal>\n  );\n}\n\n/**\n * Header container for dialog title and description.\n * Responsive layout: centered on mobile, left-aligned on desktop.\n */\nfunction AlertDialogHeader({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-dialog-header\"\n      className={cn(\"flex flex-col gap-2 text-center sm:text-left\", className)}\n      {...props}\n    />\n  );\n}\n\n/**\n * Footer container for action buttons.\n * Responsive layout: buttons stacked on mobile, side-by-side on desktop.\n */\nfunction AlertDialogFooter({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-dialog-footer\"\n      className={cn(\n        \"flex flex-col-reverse gap-2 sm:flex-row sm:justify-end\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\n/**\n * Dialog title with semantic heading markup and consistent typography.\n * Uses font-semibold and text-xl for proper visual hierarchy.\n */\nfunction AlertDialogTitle({\n  className,\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Title>) {\n  return (\n    <AlertDialogPrimitive.Title\n      data-slot=\"alert-dialog-title\"\n      className={cn(\"font-semibold text-xl\", className)}\n      {...props}\n    />\n  );\n}\n\n/**\n * Dialog description with muted text styling and proper spacing.\n * Uses text-muted-foreground and text-base for readability.\n */\nfunction AlertDialogDescription({\n  className,\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Description>) {\n  return (\n    <AlertDialogPrimitive.Description\n      data-slot=\"alert-dialog-description\"\n      className={cn(\"text-muted-foreground text-base\", className)}\n      {...props}\n    />\n  );\n}\n\n/**\n * Primary action button with default button styling.\n * Integrates with button component variants and accessibility features.\n */\nfunction AlertDialogAction({\n  className,\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Action>) {\n  return (\n    <AlertDialogPrimitive.Action\n      className={cn(buttonVariants(), className)}\n      {...props}\n    />\n  );\n}\n\n/**\n * Cancel button with outline variant styling.\n * Provides clear visual distinction from the primary action.\n */\nfunction AlertDialogCancel({\n  className,\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Cancel>) {\n  return (\n    <AlertDialogPrimitive.Cancel\n      className={cn(buttonVariants({ variant: \"outline\" }), className)}\n      {...props}\n    />\n  );\n}\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n};\n"
    }
  ]
}