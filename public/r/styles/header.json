{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "header",
  "type": "registry:ui",
  "title": "Header Styles",
  "description": "Header component styles for flexible headers with breadcrumbs and controls.",
  "registryDependencies": [
    "https://eco-design-system-2.vercel.app/r/themes/theme.json",
    "breadcrumb"
  ],
  "files": [
    {
      "path": "src/components/ui/header.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { cn } from \"@/lib/utils\";\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbList,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n} from \"@/components/ui/breadcrumb\";\n\n/**\n * Header component for creating flexible headers that can contain controls for panels.\n *\n * Features:\n * - Flexible layout with left and right content areas\n * - Built-in breadcrumb support\n * - Button and control placement on the right\n * - Consistent styling with design system\n * - Responsive design\n *\n * @example\n * ```tsx\n * <Header\n *   breadcrumbs={[\n *     { label: \"Home\", href: \"/\" },\n *     { label: \"Weather Dashboard\", href: \"/dashboard\" }\n *   ]}\n *   rightContent={\n *     <Button variant=\"outline\">Settings</Button>\n *   }\n * />\n * ```\n */\n\ninterface BreadcrumbItem {\n  label: string;\n  href?: string;\n}\n\ninterface HeaderProps {\n  /** Breadcrumb navigation items */\n  breadcrumbs?: BreadcrumbItem[];\n  /** Left side content (overrides breadcrumbs) */\n  leftContent?: React.ReactNode;\n  /** Right side content (buttons, controls, etc.) */\n  rightContent?: React.ReactNode;\n  /** Additional CSS classes */\n  className?: string;\n}\n\nexport function Header({\n  breadcrumbs = [],\n  leftContent,\n  rightContent,\n  className,\n}: HeaderProps) {\n  return (\n    <header\n      className={cn(\n        \"flex items-center justify-between w-full h-12 px-4 py-2 border-b border-border bg-background\",\n        className\n      )}\n    >\n      {/* Left content or breadcrumbs */}\n      <div className=\"flex items-center\">\n        {leftContent ? (\n          leftContent\n        ) : breadcrumbs.length > 0 ? (\n          <Breadcrumb>\n            <BreadcrumbList>\n              {breadcrumbs.map((item, index) => (\n                <React.Fragment key={index}>\n                  <BreadcrumbItem>\n                    {item.href ? (\n                      <BreadcrumbLink href={item.href}>\n                        {item.label}\n                      </BreadcrumbLink>\n                    ) : (\n                      <BreadcrumbPage>{item.label}</BreadcrumbPage>\n                    )}\n                  </BreadcrumbItem>\n                  {index < breadcrumbs.length - 1 && <BreadcrumbSeparator />}\n                </React.Fragment>\n              ))}\n            </BreadcrumbList>\n          </Breadcrumb>\n        ) : null}\n      </div>\n\n      {/* Right content */}\n      {rightContent && (\n        <div className=\"flex items-center\">\n          {rightContent}\n        </div>\n      )}\n    </header>\n  );\n}\n",
      "type": "registry:component"
    }
  ]
}
