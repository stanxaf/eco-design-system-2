{
  "name": "three-panel-layout",
  "type": "registry:block",
  "title": "Three Panel Layout",
  "description": "A three-panel layout with sidebar, main content, and right panel",
  "registryDependencies": [
    "https://eco-design-system-2.vercel.app/r/styles/sidebar.json",
    "https://eco-design-system-2.vercel.app/r/styles/button.json",
    "https://eco-design-system-2.vercel.app/r/styles/avatar.json",
    "https://eco-design-system-2.vercel.app/r/styles/input.json",
    "https://eco-design-system-2.vercel.app/r/styles/icons.json",
    "https://eco-design-system-2.vercel.app/r/styles/breadcrumb.json",
    "https://eco-design-system-2.vercel.app/r/styles/dropdown-menu.json",
    "https://eco-design-system-2.vercel.app/r/styles/collapsible.json",
    "https://eco-design-system-2.vercel.app/r/themes/theme.json"
  ],
  "files": [
    {
      "path": "src/layouts/shell-layout.tsx",
      "type": "registry:file",
      "target": "app/layout.tsx",
      "content": "import { Geist_Mono, Inter, Montserrat } from \"next/font/google\";\nimport React, { type ReactNode } from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nimport \"@/app/globals.css\";\n\nconst InterSans = Inter({\n  subsets: [\"latin\"],\n  variable: \"--font-sans\",\n});\n\nconst GeistMono = Geist_Mono({\n  subsets: [\"latin\"],\n  variable: \"--font-mono\",\n});\n\nconst MontserratSerif = Montserrat({\n  subsets: [\"latin\"],\n  variable: \"--font-serif\",\n});\n\nexport default function ShellLayout({\n  children,\n}: Readonly<{\n  children: ReactNode;\n}>) {\n  return (\n    <html\n      lang=\"en\"\n      className={cn(\n        InterSans.variable,\n        GeistMono.variable,\n        MontserratSerif.variable,\n        \"bg-background text-foreground\",\n      )}\n    >\n      <body>{children}</body>\n    </html>\n  );\n}\n"
    },
    {
      "path": "src/components/brand-sidebar.tsx",
      "type": "registry:component",
      "target": "components/brand-sidebar.tsx",
      "content": "\"use client\";\n\nimport {\n  AudioWaveform,\n  Bell,\n  BookOpen,\n  Bot,\n  Check,\n  ChevronRight,\n  ChevronsUpDown,\n  CloudSun,\n  Command,\n  Droplet,\n  Frame,\n  GalleryVerticalEnd,\n  Grid3x3,\n  Leaf,\n  LogOut,\n  Map,\n  MessageSquare,\n  PieChart,\n  Pin,\n  Search,\n  Settings2,\n  Shield,\n  SquareTerminal,\n} from \"lucide-react\";\nimport * as React from \"react\";\n\nimport { Logo } from \"@/components/logo\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport {\n  Collapsible,\n  CollapsibleContent,\n  CollapsibleTrigger,\n} from \"@/components/ui/collapsible\";\nimport {\n  CommandDialog,\n  CommandEmpty,\n  CommandGroup,\n  CommandInput,\n  CommandItem,\n  CommandList,\n} from \"@/components/ui/command\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport { Kbd } from \"@/components/ui/kbd\";\nimport { LogoContainer } from \"@/components/ui/logo-container\";\nimport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarMenu,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarRail,\n  useSidebar,\n} from \"@/components/ui/sidebar\";\n\n/**\n * Props for the BrandSidebar component\n */\ninterface BrandSidebarProps {\n  /** Additional CSS classes to apply to the sidebar container */\n  className?: string;\n}\n\n// This is sample data.\nconst data = {\n  user: {\n    name: \"John Doe\",\n    email: \"john.doe@example.com\",\n    avatar: \"/avatars/shadcn.jpg\",\n  },\n  product: {\n    name: \"Fuel Hub\",\n    logo: Logo,\n  },\n  navMain: [\n    {\n      title: \"Playground\",\n      url: \"#\",\n      icon: SquareTerminal,\n      isActive: true,\n      items: [\n        {\n          title: \"History\",\n          url: \"#\",\n        },\n        {\n          title: \"Starred\",\n          url: \"#\",\n        },\n        {\n          title: \"Settings\",\n          url: \"#\",\n        },\n      ],\n    },\n    {\n      title: \"Models\",\n      url: \"#\",\n      icon: Bot,\n      items: [\n        {\n          title: \"Genesis\",\n          url: \"#\",\n        },\n        {\n          title: \"Explorer\",\n          url: \"#\",\n        },\n        {\n          title: \"Quantum\",\n          url: \"#\",\n        },\n      ],\n    },\n    {\n      title: \"Documentation\",\n      url: \"#\",\n      icon: BookOpen,\n      items: [\n        {\n          title: \"Introduction\",\n          url: \"#\",\n        },\n        {\n          title: \"Get Started\",\n          url: \"#\",\n        },\n        {\n          title: \"Tutorials\",\n          url: \"#\",\n        },\n        {\n          title: \"Changelog\",\n          url: \"#\",\n        },\n      ],\n    },\n    {\n      title: \"Settings\",\n      url: \"#\",\n      icon: Settings2,\n      items: [\n        {\n          title: \"General\",\n          url: \"#\",\n        },\n        {\n          title: \"Team\",\n          url: \"#\",\n        },\n        {\n          title: \"Billing\",\n          url: \"#\",\n        },\n        {\n          title: \"Limits\",\n          url: \"#\",\n        },\n      ],\n    },\n  ],\n  projects: [\n    {\n      name: \"Design Engineering\",\n      url: \"#\",\n      icon: Frame,\n    },\n    {\n      name: \"Sales & Marketing\",\n      url: \"#\",\n      icon: PieChart,\n    },\n    {\n      name: \"Travel\",\n      url: \"#\",\n      icon: Map,\n    },\n  ],\n};\n\n// Bottom navigation items\nconst bottomNav = [\n  {\n    title: \"Messages\",\n    icon: MessageSquare,\n    url: \"#\",\n  },\n  {\n    title: \"Notifications\",\n    icon: Bell,\n    url: \"#\",\n  },\n];\n\nconst dtnApps = [\n  { title: \"Identity Management\", url: \"#\", icon: Shield },\n  { title: \"Weather Hub\", url: \"#\", icon: CloudSun },\n  { title: \"Fuel Hub\", url: \"#\", icon: Droplet },\n  { title: \"Sustainability Marketplace\", url: \"#\", icon: Leaf },\n];\n\n/**\n * BrandSidebar - A navigation sidebar component\n *\n * Based on the shadcn/ui sidebar-07 example that collapses to icons.\n * Features workspace switcher, collapsible nav sections, and user menu.\n *\n * IMPORTANT: Must be wrapped in SidebarProvider\n *\n * @example\n * ```tsx\n * import { SidebarProvider } from \"@/components/ui/sidebar\";\n * import { BrandSidebar } from \"@/components/brand-sidebar\";\n *\n * <SidebarProvider>\n *   <BrandSidebar />\n *   <main>\n *     <h1>Main Content</h1>\n *   </main>\n * </SidebarProvider>\n * ```\n */\nexport function BrandSidebar({ className }: BrandSidebarProps) {\n  const { state, toggleSidebar } = useSidebar();\n  const [open, setOpen] = React.useState(false);\n\n  React.useEffect(() => {\n    const down = (e: KeyboardEvent) => {\n      if (e.key === \"k\" && (e.metaKey || e.ctrlKey)) {\n        e.preventDefault();\n        setOpen((open) => !open);\n      }\n    };\n    document.addEventListener(\"keydown\", down);\n    return () => document.removeEventListener(\"keydown\", down);\n  }, []);\n\n  return (\n    <Sidebar collapsible=\"icon\" className={className}>\n      <SidebarHeader className=\"min-h-[48px] justify-center border-b border-sidebar-border\">\n        <div className=\"flex items-center px-2 py-1.5\">\n          <div className=\"w-6 shrink-0\">\n            <LogoContainer logo={data.product.logo} className=\"size-6\" />\n          </div>\n          <span className=\"ml-2 truncate text-sm font-normal flex-1 group-data-[collapsible=icon]:hidden\">\n            {data.product.name}\n          </span>\n        </div>\n      </SidebarHeader>\n\n      <SidebarContent>\n        <SidebarGroup>\n          <SidebarMenu>\n            <SidebarMenuItem>\n              <SidebarMenuButton onClick={() => setOpen(true)} tooltip=\"Search\">\n                <Search />\n                <span>Search...</span>\n                <Kbd className=\"ml-auto\">âŒ˜K</Kbd>\n              </SidebarMenuButton>\n            </SidebarMenuItem>\n          </SidebarMenu>\n        </SidebarGroup>\n        <SidebarGroup>\n          <SidebarGroupLabel>Platform</SidebarGroupLabel>\n          <SidebarMenu>\n            {data.navMain.map((item) => (\n              <Collapsible\n                key={item.title}\n                asChild\n                defaultOpen={item.isActive}\n                className=\"group/collapsible\"\n              >\n                <SidebarMenuItem>\n                  <CollapsibleTrigger asChild>\n                    <SidebarMenuButton tooltip={item.title}>\n                      {item.icon && <item.icon />}\n                      <span>{item.title}</span>\n                      <ChevronRight className=\"ml-auto transition-transform duration-200 group-data-[state=open]/collapsible:rotate-90\" />\n                    </SidebarMenuButton>\n                  </CollapsibleTrigger>\n                  <CollapsibleContent>\n                    <SidebarMenuSub>\n                      {item.items?.map((subItem) => (\n                        <SidebarMenuSubItem key={subItem.title}>\n                          <SidebarMenuSubButton asChild>\n                            <a href={subItem.url}>\n                              <span>{subItem.title}</span>\n                            </a>\n                          </SidebarMenuSubButton>\n                        </SidebarMenuSubItem>\n                      ))}\n                    </SidebarMenuSub>\n                  </CollapsibleContent>\n                </SidebarMenuItem>\n              </Collapsible>\n            ))}\n          </SidebarMenu>\n        </SidebarGroup>\n        <SidebarGroup className=\"group-data-[collapsible=icon]:hidden\">\n          <SidebarGroupLabel>Projects</SidebarGroupLabel>\n          <SidebarMenu>\n            {data.projects.map((item) => (\n              <SidebarMenuItem key={item.name}>\n                <SidebarMenuButton asChild>\n                  <a href={item.url}>\n                    <item.icon />\n                    <span>{item.name}</span>\n                  </a>\n                </SidebarMenuButton>\n              </SidebarMenuItem>\n            ))}\n          </SidebarMenu>\n        </SidebarGroup>\n        <SidebarGroup className=\"mt-auto\">\n          <SidebarMenu>\n            {bottomNav.map((item) => (\n              <SidebarMenuItem key={item.title}>\n                <SidebarMenuButton asChild tooltip={item.title}>\n                  <a href={item.url}>\n                    <item.icon />\n                    <span>{item.title}</span>\n                  </a>\n                </SidebarMenuButton>\n              </SidebarMenuItem>\n            ))}\n            <SidebarMenuItem>\n              <DropdownMenu>\n                <DropdownMenuTrigger asChild>\n                  <SidebarMenuButton\n                    tooltip=\"DTN Apps\"\n                    className=\"data-[state=open]:bg-sidebar-accent data-[state=open]:text-sidebar-accent-foreground\"\n                  >\n                    <Grid3x3 />\n                    <span className=\"whitespace-nowrap\">DTN Apps</span>\n                    <ChevronsUpDown className=\"ml-auto size-4\" />\n                  </SidebarMenuButton>\n                </DropdownMenuTrigger>\n                <DropdownMenuContent\n                  className=\"w-[--radix-dropdown-menu-trigger-width] min-w-56 rounded-lg\"\n                  side=\"right\"\n                  align=\"end\"\n                  sideOffset={4}\n                >\n                  <DropdownMenuLabel>DTN Applications</DropdownMenuLabel>\n                  <DropdownMenuSeparator />\n                  {dtnApps.map((app) => {\n                    const isActive = app.title === data.product.name;\n                    return (\n                      <DropdownMenuItem key={app.title} asChild>\n                        <a href={app.url}>\n                          <app.icon />\n                          {app.title}\n                          {isActive && <Check className=\"ml-auto size-4\" />}\n                        </a>\n                      </DropdownMenuItem>\n                    );\n                  })}\n                </DropdownMenuContent>\n              </DropdownMenu>\n            </SidebarMenuItem>\n          </SidebarMenu>\n        </SidebarGroup>\n      </SidebarContent>\n\n      <SidebarFooter className=\"p-0\">\n        <SidebarMenu>\n          <SidebarMenuItem className=\"border-t border-sidebar-border py-1 px-2\">\n            <DropdownMenu>\n              <DropdownMenuTrigger asChild>\n                <SidebarMenuButton\n                  size=\"default\"\n                  className=\"data-[state=open]:bg-sidebar-accent data-[state=open]:text-sidebar-accent-foreground\"\n                >\n                  <Avatar className=\"h-8 w-8 -ml-2\">\n                    <AvatarImage src={data.user.avatar} alt={data.user.name} />\n                    <AvatarFallback>JD</AvatarFallback>\n                  </Avatar>\n                  <div className=\"grid flex-1 text-left text-sm leading-tight whitespace-nowrap\">\n                    <span className=\"truncate font-semibold\">\n                      {data.user.name}\n                    </span>\n                    {/* <span className=\"truncate text-xs\">{data.user.email}</span> */}\n                  </div>\n                  <ChevronsUpDown className=\"ml-auto size-4\" />\n                </SidebarMenuButton>\n              </DropdownMenuTrigger>\n              <DropdownMenuContent\n                className=\"w-[--radix-dropdown-menu-trigger-width] min-w-56 rounded-lg\"\n                side=\"right\"\n                align=\"end\"\n                sideOffset={4}\n              >\n                <DropdownMenuLabel className=\"p-0 font-normal\">\n                  <div className=\"flex items-center gap-2 px-1 py-1.5 text-left text-sm\">\n                    <Avatar className=\"h-8 w-8\">\n                      <AvatarImage\n                        src={data.user.avatar}\n                        alt={data.user.name}\n                      />\n                      <AvatarFallback>JD</AvatarFallback>\n                    </Avatar>\n                    <div className=\"grid flex-1 text-left text-sm leading-tight\">\n                      <span className=\"truncate font-semibold\">\n                        {data.user.name}\n                      </span>\n                      <span className=\"truncate text-xs\">\n                        {data.user.email}\n                      </span>\n                    </div>\n                  </div>\n                </DropdownMenuLabel>\n                <DropdownMenuSeparator />\n                <DropdownMenuGroup>\n                  <DropdownMenuItem>\n                    <Settings2 />\n                    Account\n                  </DropdownMenuItem>\n                </DropdownMenuGroup>\n                <DropdownMenuSeparator />\n                <DropdownMenuItem>\n                  <LogOut />\n                  Log out\n                </DropdownMenuItem>\n              </DropdownMenuContent>\n            </DropdownMenu>\n          </SidebarMenuItem>\n          <SidebarMenuItem className=\"border-t border-sidebar-border p-2\">\n            <SidebarMenuButton\n              onClick={toggleSidebar}\n              tooltip={state === \"collapsed\" ? \"Pin Sidebar\" : \"Unpin Sidebar\"}\n            >\n              <Pin />\n              <span>{state === \"collapsed\" ? \"Pin Sidebar\" : \"Unpin Sidebar\"}</span>\n              <Kbd className=\"ml-auto\">âŒ˜B</Kbd>\n            </SidebarMenuButton>\n          </SidebarMenuItem>\n        </SidebarMenu>\n      </SidebarFooter>\n      <SidebarRail />\n\n      <CommandDialog open={open} onOpenChange={setOpen}>\n        <CommandInput placeholder=\"Search...\" />\n        <CommandList>\n          <CommandEmpty>No results found.</CommandEmpty>\n          <CommandGroup heading=\"Platform\">\n            {data.navMain.map((item) => (\n              <CommandItem\n                key={item.title}\n                onSelect={() => {\n                  window.location.href = item.url;\n                  setOpen(false);\n                }}\n              >\n                {item.icon && <item.icon className=\"mr-2 h-4 w-4\" />}\n                <span>{item.title}</span>\n              </CommandItem>\n            ))}\n          </CommandGroup>\n          <CommandGroup heading=\"Projects\">\n            {data.projects.map((item) => (\n              <CommandItem\n                key={item.name}\n                onSelect={() => {\n                  window.location.href = item.url;\n                  setOpen(false);\n                }}\n              >\n                <item.icon className=\"mr-2 h-4 w-4\" />\n                <span>{item.name}</span>\n              </CommandItem>\n            ))}\n          </CommandGroup>\n          <CommandGroup heading=\"Applications\">\n            {dtnApps.map((app) => (\n              <CommandItem\n                key={app.title}\n                onSelect={() => {\n                  window.location.href = app.url;\n                  setOpen(false);\n                }}\n              >\n                <app.icon className=\"mr-2 h-4 w-4\" />\n                <span>{app.title}</span>\n              </CommandItem>\n            ))}\n          </CommandGroup>\n          <CommandGroup heading=\"Settings\">\n            <CommandItem\n              onSelect={() => {\n                setOpen(false);\n              }}\n            >\n              <Settings2 className=\"mr-2 h-4 w-4\" />\n              <span>Account</span>\n            </CommandItem>\n            <CommandItem\n              onSelect={() => {\n                setOpen(false);\n              }}\n            >\n              <LogOut className=\"mr-2 h-4 w-4\" />\n              <span>Log out</span>\n            </CommandItem>\n          </CommandGroup>\n        </CommandList>\n      </CommandDialog>\n    </Sidebar>\n  );\n}\n"
    },
    {
      "path": "src/components/logo.tsx",
      "type": "registry:component",
      "target": "components/logo.tsx",
      "content": "export function Logo() {\n  return (\n    <svg\n      width=\"23\"\n      height=\"22\"\n      viewBox=\"0 0 23 22\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"flex-shrink-0\"\n    >\n      <path\n        d=\"M11.5266 15.5687C10.2941 15.5586 9.11621 15.0688 8.25187 14.2069C7.38753 13.3451 6.90759 12.1817 6.91754 10.9728H0.527987C0.499569 12.4072 0.762958 13.8327 1.30289 15.166C1.84283 16.4993 2.64841 17.7136 3.67248 18.7379C4.69655 19.7621 5.91858 20.5758 7.26705 21.1312C8.61552 21.6867 10.0634 21.9728 11.5259 21.9728C12.9884 21.9728 14.4363 21.6867 15.7848 21.1312C17.1332 20.5758 18.3552 19.7621 19.3792 18.7379C20.4033 17.7136 21.2089 16.4993 21.7488 15.166C22.2888 13.8327 22.5522 12.4072 22.5238 10.9728H16.1315C16.1414 12.1817 15.6615 13.3451 14.7972 14.2069C13.9328 15.0688 12.7549 15.5586 11.5224 15.5687\"\n        fill=\"#68C949\"\n      />\n      <path\n        d=\"M11.5276 0C8.58665 0.0237508 5.77574 1.19599 3.71319 3.25887C1.65063 5.32175 0.505392 8.10631 0.52936 11H6.91949C6.91949 9.79713 7.40512 8.64353 8.26957 7.79297C9.13402 6.94242 10.3064 6.46457 11.5289 6.46457C12.7515 6.46457 13.924 6.94242 14.7884 7.79297C15.6529 8.64353 16.1385 9.79713 16.1385 11H22.5286C22.5405 9.56708 22.2654 8.14588 21.719 6.81758C21.1726 5.48927 20.3657 4.27985 19.3443 3.25839C18.3229 2.23694 17.107 1.42347 15.766 0.864387C14.4251 0.305308 12.9839 0.0115822 11.5276 0Z\"\n        fill=\"#1497E3\"\n      />\n    </svg>\n  );\n}\n"
    },
    {
      "path": "src/components/ui/logo-container.tsx",
      "type": "registry:component",
      "target": "components/ui/logo-container.tsx",
      "content": "import { cn } from \"@/lib/utils\";\n\ninterface LogoContainerProps {\n  logo: React.ComponentType;\n  className?: string;\n}\n\nexport function LogoContainer({\n  logo: LogoComponent,\n  className = \"size-4\",\n}: LogoContainerProps) {\n  return (\n    <div\n      className={cn(\n        \"flex items-center justify-center [&>svg]:max-h-full [&>svg]:max-w-full [&>svg]:h-auto [&>svg]:w-auto\",\n        className,\n      )}\n    >\n      <LogoComponent />\n    </div>\n  );\n}\n\n"
    },
    {
      "path": "src/components/ui/header.tsx",
      "type": "registry:component",
      "target": "components/ui/header.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { cn } from \"@/lib/utils\";\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbList,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n} from \"@/components/ui/breadcrumb\";\n\n/**\n * Header component for creating flexible headers that can contain controls for panels.\n *\n * Features:\n * - Flexible layout with left and right content areas\n * - Built-in breadcrumb support\n * - Button and control placement on the right\n * - Consistent styling with design system\n * - Responsive design\n *\n * @example\n * ```tsx\n * <Header\n *   breadcrumbs={[\n *     { label: \"Home\", href: \"/\" },\n *     { label: \"Weather Dashboard\", href: \"/dashboard\" }\n *   ]}\n *   rightContent={<Button>Secondary</Button>}\n * />\n * ```\n */\n\ninterface BreadcrumbItem {\n  label: string;\n  href?: string;\n}\n\ninterface HeaderProps {\n  /** Breadcrumb navigation items */\n  breadcrumbs?: BreadcrumbItem[];\n  /** Content to display on the left side (overrides breadcrumbs) */\n  leftContent?: React.ReactNode;\n  /** Content to display on the right side (buttons, controls, etc.) */\n  rightContent?: React.ReactNode;\n  /** Additional CSS classes */\n  className?: string;\n}\n\n/**\n * Header component for creating flexible headers with breadcrumbs and controls.\n *\n * @param props - Header component props\n * @returns JSX element\n */\nexport function Header({\n  breadcrumbs,\n  leftContent,\n  rightContent,\n  className,\n  ...props\n}: HeaderProps) {\n  return (\n    <header\n      className={cn(\n        \"flex w-full h-12 items-center justify-between border-b border-border bg-background px-3 py-2 shadow-sm\",\n        className\n      )}\n      {...props}\n    >\n      {/* Left side content */}\n      <div className=\"flex items-center\">\n        {leftContent ? (\n          leftContent\n        ) : breadcrumbs ? (\n          <Breadcrumb>\n            <BreadcrumbList>\n              {breadcrumbs.map((item, index) => (\n                <React.Fragment key={index}>\n                  {index > 0 && <BreadcrumbSeparator />}\n                  <BreadcrumbItem>\n                    {item.href ? (\n                      <BreadcrumbLink href={item.href}>\n                        {item.label}\n                      </BreadcrumbLink>\n                    ) : (\n                      <BreadcrumbPage>{item.label}</BreadcrumbPage>\n                    )}\n                  </BreadcrumbItem>\n                </React.Fragment>\n              ))}\n            </BreadcrumbList>\n          </Breadcrumb>\n        ) : null}\n      </div>\n\n      {/* Right side content */}\n      {rightContent && (\n        <div className=\"flex items-center space-x-2\">\n          {rightContent}\n        </div>\n      )}\n    </header>\n  );\n}\n"
    },
    {
      "path": "src/app/demo/[name]/blocks/three-panel-layout-page.tsx",
      "type": "registry:page",
      "target": "app/page.tsx",
      "content": "/**\n * Three Panel Layout Page Component\n *\n * A layout with three side-by-side panels:\n * - BrandSidebar for navigation\n * - Header with custom left content for navigation\n * - Left panel: Fixed width, max 280px with clean panel structure\n * - Center panel: Flexible width with clean panel structure\n * - Right panel: Fixed width, max 280px with clean panel structure\n * - Responsive design - panels stack vertically on mobile\n * - Uses Panel component from the design system\n *\n * This component provides a flexible three-panel layout structure\n * perfect for applications with sidebar navigation, main content area,\n * and a details/settings panel on the right.\n *\n * @returns JSX element with three-panel layout\n */\nimport { BrandSidebar } from \"@/components/brand-sidebar\";\nimport { Panel } from \"@/components/panel\";\nimport { Button } from \"@/components/ui/button\";\nimport { Header } from \"@/components/ui/header\";\nimport { SidebarProvider } from \"@/components/ui/sidebar\";\nimport { Inbox, Settings } from \"lucide-react\";\n\nexport default function ThreePanelLayoutPage() {\n  return (\n    <SidebarProvider>\n      <BrandSidebar />\n      <main className=\"flex-1 flex flex-col\">\n        {/* Header with custom left content */}\n        <Header\n        leftContent={\n          <div className=\"flex items-center gap-3\">\n            <Button variant=\"ghost\" size=\"icon\">\n              <Inbox className=\"w-4 h-4\" />\n            </Button>\n            <h6 className=\"font-medium\">Three Panel Dashboard</h6>\n          </div>\n        }\n        rightContent={\n          <div className=\"flex items-center space-x-2\">\n            <Button variant=\"ghost\" size=\"icon\">\n              <Settings className=\"w-4 h-4\" />\n            </Button>\n          </div>\n        }\n      />\n\n      {/* Three Panel Layout */}\n      <div className=\"flex flex-col md:flex-row flex-1\">\n        {/* Left Panel - Fixed width, max 280px on desktop, full width on mobile */}\n        <Panel\n          size=\"fit\"\n          responsive={{ md: \"fit\" }}\n          title=\"Left Panel\"\n          className=\"w-full md:max-w-[280px] md:w-[280px]\"\n          footer={\n            <span className=\"text-sm text-muted-foreground\">\n              Left Panel Footer\n            </span>\n          }\n        >\n          {/* Panel content area - ready for your content */}\n        </Panel>\n\n        {/* Center Panel - Flexible width on desktop, full width on mobile */}\n        <Panel\n          size=\"full\"\n          responsive={{ md: \"full\" }}\n          title=\"Main Content\"\n          className=\"w-full flex-1\"\n          footer={\n            <span className=\"text-sm text-muted-foreground\">\n              Main Content Footer\n            </span>\n          }\n        >\n          {/* Panel content area - ready for your content */}\n        </Panel>\n\n        {/* Right Panel - Fixed width, max 280px on desktop, full width on mobile */}\n        <Panel\n          size=\"fit\"\n          responsive={{ md: \"fit\" }}\n          title=\"Right Panel\"\n          className=\"w-full md:max-w-[280px] md:w-[280px]\"\n          borderRight={false}\n          footer={\n            <span className=\"text-sm text-muted-foreground\">\n              Right Panel Footer\n            </span>\n          }\n        >\n          {/* Panel content area - ready for your content */}\n        </Panel>\n      </div>\n      </main>\n    </SidebarProvider>\n  );\n}\n"
    },
    {
      "path": "src/components/panel.tsx",
      "type": "registry:component",
      "content": "\"use client\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { cn } from \"@/lib/utils\";\nimport type * as React from \"react\";\n// Removed external component imports for v0 compatibility\n\n/**\n * Panel component for creating flexible layouts with header, content, and footer areas.\n *\n * Features:\n * - Responsive sizing with flexible column system\n * - Header with title and action button\n * - Content area with proper spacing\n * - Footer with status information\n * - Customizable alignment and justification\n * - Border and styling options\n *\n * @example\n * ```tsx\n * // Basic panel with default 100% height (fills parent container)\n * <Panel size=\"4\" title=\"My Panel\" footer={<span>Status: Active</span>}>\n *   <div>Panel content goes here</div>\n * </Panel>\n *\n * // Panel with full screen height (100vh)\n * <Panel height=\"screen\" title=\"My Panel\">\n *   <div>Panel content goes here</div>\n * </Panel>\n *\n * // Panel with custom header and full height\n * <Panel height=\"full\" header={\n *   <div className=\"flex items-center justify-between w-full\">\n *     <h6>Custom Header</h6>\n *     <Button size=\"sm\">Action</Button>\n *   </div>\n * }>\n *   <div>Panel content with custom header</div>\n * </Panel>\n *\n * // Panel with responsive sizing and full height\n * <Panel\n *   size=\"6\"\n *   height=\"full\"\n *   responsive={{ md: \"4\", lg: \"3\" }}\n *   title=\"Responsive Panel\"\n * >\n *   <div>Content adapts to screen size</div>\n * </Panel>\n * ```\n */\n\ntype ColumnSize =\n  | \"auto\"\n  | \"1\"\n  | \"2\"\n  | \"3\"\n  | \"4\"\n  | \"5\"\n  | \"6\"\n  | \"12\"\n  | \"full\"\n  | \"fit\";\n\n/**\n * Props for the Panel component\n */\ninterface PanelProps {\n  /** Sizing */\n  /** Panel size using flexible column system */\n  size?: ColumnSize;\n  /** Responsive sizing for different breakpoints */\n  responsive?: {\n    sm?: ColumnSize;\n    md?: ColumnSize;\n    lg?: ColumnSize;\n    xl?: ColumnSize;\n  };\n\n  /** Layout */\n  /** Vertical alignment of panel content */\n  align?: \"start\" | \"center\" | \"end\" | \"stretch\";\n  /** Horizontal justification of panel content */\n  justify?: \"start\" | \"center\" | \"end\" | \"between\" | \"around\" | \"evenly\";\n\n  /** Content areas */\n  /** Panel title displayed in header */\n  title?: string;\n  /** Custom header content (overrides title) */\n  header?: React.ReactNode;\n  /** Whether to hide the header completely */\n  hideHeader?: boolean;\n  /** Main panel content */\n  children?: React.ReactNode;\n  /** Footer content with status information */\n  footer?: React.ReactNode;\n  /** Whether to hide the footer completely */\n  hideFooter?: boolean;\n\n  /** Styling */\n  /** Whether to show right border */\n  borderRight?: boolean;\n  /** Height behavior: 'screen' for 100vh, 'full' for 100% of parent */\n  height?: \"screen\" | \"full\";\n  /** Additional CSS classes */\n  className?: string;\n}\n\nconst sizeClasses = {\n  auto: \"flex-auto\",\n  \"1\": \"flex-[0_0_8.333333%]\",\n  \"2\": \"flex-[0_0_16.666667%]\",\n  \"3\": \"flex-[0_0_25%]\",\n  \"4\": \"flex-[0_0_33.333333%]\",\n  \"5\": \"flex-[0_0_41.666667%]\",\n  \"6\": \"flex-[0_0_50%]\",\n  \"12\": \"flex-[0_0_100%]\",\n  full: \"flex-1\",\n  fit: \"flex-none\",\n};\n\nconst alignClasses = {\n  start: \"items-start\",\n  center: \"items-center\",\n  end: \"items-end\",\n  stretch: \"items-stretch\",\n};\n\nconst justifyClasses = {\n  start: \"justify-start\",\n  center: \"justify-center\",\n  end: \"justify-end\",\n  between: \"justify-between\",\n  around: \"justify-around\",\n  evenly: \"justify-evenly\",\n};\n\nconst getResponsiveClasses = (responsive?: PanelProps[\"responsive\"]) => {\n  if (!responsive) return \"\";\n\n  const classes: string[] = [];\n\n  if (responsive.sm) classes.push(`sm:${sizeClasses[responsive.sm]}`);\n  if (responsive.md) classes.push(`md:${sizeClasses[responsive.md]}`);\n  if (responsive.lg) classes.push(`lg:${sizeClasses[responsive.lg]}`);\n  if (responsive.xl) classes.push(`xl:${sizeClasses[responsive.xl]}`);\n\n  return classes.join(\" \");\n};\n\n/**\n * Panel component for creating flexible layouts with header, content, and footer areas.\n *\n * @param props - Panel component props\n * @returns JSX element\n */\nexport function Panel({\n  size = \"auto\",\n  responsive,\n  align = \"stretch\",\n  justify = \"start\",\n  title = \"Panel\",\n  header,\n  hideHeader = false,\n  children,\n  footer,\n  hideFooter = false,\n  borderRight = true,\n  height = \"full\",\n  className,\n  ...props\n}: PanelProps) {\n  const baseSizeClass = sizeClasses[size];\n  const responsiveClasses = getResponsiveClasses(responsive);\n\n  // Determine height class based on height prop\n  const heightClass = height === \"screen\" ? \"h-screen\" : \"h-full\";\n\n  return (\n    <div\n      className={cn(\n        \"relative flex flex-col\",\n        heightClass,\n        borderRight && \"border-r border-border\",\n        baseSizeClass,\n        responsiveClasses,\n        alignClasses[align],\n        justifyClasses[justify],\n        className,\n      )}\n      {...props}\n    >\n      {!hideHeader && (\n        <div className=\"absolute top-0 left-0 right-0 z-10 flex w-full h-12 px-3 py-2 justify-between items-center border-b border-border bg-background shadow-sm\">\n          {header ? (\n            header\n          ) : (\n            <>\n              <h6>{title}</h6>\n              <Button variant=\"ghost\" size=\"icon\">\n                <svg\n                  className=\"size-4\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    d=\"M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z\"\n                  />\n                </svg>\n              </Button>\n            </>\n          )}\n        </div>\n      )}\n\n      {children && (\n        <div\n          className={cn(\n            \"flex-1 w-full p-3 items-start self-stretch bg-background overflow-y-auto\",\n            !hideHeader && \"pt-12\", // 48px for header + 12px spacing\n            !hideHeader && \"pt-[60px]\", // 48px for header + 12px spacing\n            hideHeader && \"pt-0\", // No top padding when header is hidden\n            !hideFooter && footer && \"pb-12\", // Bottom padding only when footer exists and not hidden\n            hideFooter && \"pb-0\", // No bottom padding when footer is hidden\n          )}\n        >\n          {children}\n        </div>\n      )}\n\n      {!hideFooter && footer && (\n        <div className=\"absolute bottom-0 left-0 right-0 z-10 flex w-full h-12 min-h-10 px-3 py-2 justify-between items-center border-t border-border bg-background text-muted-foreground text-sm\">\n          {footer}\n        </div>\n      )}\n    </div>\n  );\n}\n"
    }
  ]
}