{
  "name": "filtered-content-layout",
  "type": "registry:block",
  "title": "Filtered Content Layout",
  "description": "A layout with filtering capabilities and content display",
  "registryDependencies": [
    "https://eco-design-system-2.vercel.app/r/styles/sidebar.json",
    "https://eco-design-system-2.vercel.app/r/styles/button.json",
    "https://eco-design-system-2.vercel.app/r/styles/avatar.json",
    "https://eco-design-system-2.vercel.app/r/styles/input.json",
    "https://eco-design-system-2.vercel.app/r/styles/icons.json",
    "https://eco-design-system-2.vercel.app/r/styles/collapsible.json",
    "https://eco-design-system-2.vercel.app/r/styles/dropdown-menu.json",
    "https://eco-design-system-2.vercel.app/r/styles/breadcrumb.json",
    "https://eco-design-system-2.vercel.app/r/styles/checkbox.json",
    "https://eco-design-system-2.vercel.app/r/styles/label.json",
    "https://eco-design-system-2.vercel.app/r/styles/select.json",
    "https://eco-design-system-2.vercel.app/r/styles/slider.json",
    "https://eco-design-system-2.vercel.app/r/themes/theme.json"
  ],
  "files": [
    {
      "path": "src/layouts/shell-layout.tsx",
      "type": "registry:file",
      "target": "app/layout.tsx",
      "content": "import { Geist_Mono, Inter, Montserrat } from \"next/font/google\";\nimport React, { type ReactNode } from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nimport \"@/app/globals.css\";\n\nconst InterSans = Inter({\n  subsets: [\"latin\"],\n  variable: \"--font-sans\",\n});\n\nconst GeistMono = Geist_Mono({\n  subsets: [\"latin\"],\n  variable: \"--font-mono\",\n});\n\nconst MontserratSerif = Montserrat({\n  subsets: [\"latin\"],\n  variable: \"--font-serif\",\n});\n\nexport default function ShellLayout({\n  children,\n}: Readonly<{\n  children: ReactNode;\n}>) {\n  return (\n    <html\n      lang=\"en\"\n      className={cn(\n        InterSans.variable,\n        GeistMono.variable,\n        MontserratSerif.variable,\n        \"bg-background text-foreground\",\n      )}\n    >\n      <body>{children}</body>\n    </html>\n  );\n}\n"
    },
    {
      "path": "src/components/brand-sidebar.tsx",
      "type": "registry:component",
      "target": "components/brand-sidebar.tsx",
      "content": "\"use client\";\n\nimport {\n  AudioWaveform,\n  BookOpen,\n  Bot,\n  ChevronRight,\n  ChevronsUpDown,\n  Command,\n  Frame,\n  GalleryVerticalEnd,\n  LogOut,\n  Map,\n  PieChart,\n  Settings2,\n  SquareTerminal,\n} from \"lucide-react\";\nimport * as React from \"react\";\n\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport {\n  Collapsible,\n  CollapsibleContent,\n  CollapsibleTrigger,\n} from \"@/components/ui/collapsible\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarMenu,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarRail,\n} from \"@/components/ui/sidebar\";\n\n/**\n * Props for the BrandSidebar component\n */\ninterface BrandSidebarProps {\n  /** Additional CSS classes to apply to the sidebar container */\n  className?: string;\n  /** Force the team switcher to be visible even with single team (for testing/admin) */\n  forceTeamSwitcherVisible?: boolean;\n}\n\n// This is sample data.\n// QA: To test single team behavior, change teams array to have only one item:\n// teams: [{ name: \"Acme Inc\", logo: GalleryVerticalEnd, plan: \"Enterprise\" }]\nconst data = {\n  user: {\n    name: \"shadcn\",\n    email: \"m@example.com\",\n    avatar: \"/avatars/shadcn.jpg\",\n  },\n  teams: [\n    {\n      name: \"DTN\",\n      logo: GalleryVerticalEnd,\n      plan: \"Enterprise\",\n    },\n    // {\n    //   name: \"Acme Corp.\",\n    //   logo: AudioWaveform,\n    //   plan: \"Startup\",\n    // },\n    // {\n    //   name: \"Evil Corp.\",\n    //   logo: Command,\n    //   plan: \"Free\",\n    // },\n  ],\n  navMain: [\n    {\n      title: \"Playground\",\n      url: \"#\",\n      icon: SquareTerminal,\n      isActive: true,\n      items: [\n        {\n          title: \"History\",\n          url: \"#\",\n        },\n        {\n          title: \"Starred\",\n          url: \"#\",\n        },\n        {\n          title: \"Settings\",\n          url: \"#\",\n        },\n      ],\n    },\n    {\n      title: \"Models\",\n      url: \"#\",\n      icon: Bot,\n      items: [\n        {\n          title: \"Genesis\",\n          url: \"#\",\n        },\n        {\n          title: \"Explorer\",\n          url: \"#\",\n        },\n        {\n          title: \"Quantum\",\n          url: \"#\",\n        },\n      ],\n    },\n    {\n      title: \"Documentation\",\n      url: \"#\",\n      icon: BookOpen,\n      items: [\n        {\n          title: \"Introduction\",\n          url: \"#\",\n        },\n        {\n          title: \"Get Started\",\n          url: \"#\",\n        },\n        {\n          title: \"Tutorials\",\n          url: \"#\",\n        },\n        {\n          title: \"Changelog\",\n          url: \"#\",\n        },\n      ],\n    },\n    {\n      title: \"Settings\",\n      url: \"#\",\n      icon: Settings2,\n      items: [\n        {\n          title: \"General\",\n          url: \"#\",\n        },\n        {\n          title: \"Team\",\n          url: \"#\",\n        },\n        {\n          title: \"Billing\",\n          url: \"#\",\n        },\n        {\n          title: \"Limits\",\n          url: \"#\",\n        },\n      ],\n    },\n  ],\n  projects: [\n    {\n      name: \"Design Engineering\",\n      url: \"#\",\n      icon: Frame,\n    },\n    {\n      name: \"Sales & Marketing\",\n      url: \"#\",\n      icon: PieChart,\n    },\n    {\n      name: \"Travel\",\n      url: \"#\",\n      icon: Map,\n    },\n  ],\n};\n\n/**\n * BrandSidebar - A navigation sidebar component\n *\n * Based on the shadcn/ui sidebar-07 example that collapses to icons.\n * Features workspace switcher, collapsible nav sections, and user menu.\n *\n * IMPORTANT: Must be wrapped in SidebarProvider\n *\n * @example\n * ```tsx\n * import { SidebarProvider } from \"@/components/ui/sidebar\";\n * import { BrandSidebar } from \"@/components/brand-sidebar\";\n *\n * <SidebarProvider>\n *   <BrandSidebar />\n *   <main>\n *     <h1>Main Content</h1>\n *   </main>\n * </SidebarProvider>\n * ```\n */\nexport function BrandSidebar({\n  className,\n  forceTeamSwitcherVisible = false,\n}: BrandSidebarProps) {\n  const [activeTeam, setActiveTeam] = React.useState(data.teams[0]);\n\n  // Determine if team switcher should be visible\n  const hasMultipleTeams = data.teams.length > 1;\n  const showTeamSwitcher = hasMultipleTeams || forceTeamSwitcherVisible;\n\n  return (\n    <Sidebar collapsible=\"icon\" className={className}>\n      <SidebarHeader className=\"border-b border-sidebar-border\">\n        <SidebarMenu>\n          <SidebarMenuItem>\n            {showTeamSwitcher ? (\n              // Full dropdown menu for multiple teams or forced visibility\n              <DropdownMenu>\n                <DropdownMenuTrigger asChild>\n                  <SidebarMenuButton\n                    size=\"lg\"\n                    className=\"data-[state=open]:bg-sidebar-accent data-[state=open]:text-sidebar-accent-foreground\"\n                  >\n                    <div className=\"flex aspect-square size-8 items-center justify-center rounded-lg bg-sidebar-primary text-sidebar-primary-foreground\">\n                      <activeTeam.logo className=\"size-4\" />\n                    </div>\n                    <div className=\"grid flex-1 text-left text-sm leading-tight\">\n                      <span className=\"truncate font-semibold\">\n                        {activeTeam.name}\n                      </span>\n                      <span className=\"truncate text-xs\">\n                        {activeTeam.plan}\n                      </span>\n                    </div>\n                    <ChevronsUpDown className=\"ml-auto\" />\n                  </SidebarMenuButton>\n                </DropdownMenuTrigger>\n                <DropdownMenuContent\n                  className=\"w-[--radix-dropdown-menu-trigger-width] min-w-56 rounded-lg\"\n                  align=\"start\"\n                  side=\"bottom\"\n                  sideOffset={4}\n                >\n                  <DropdownMenuLabel className=\"text-xs text-muted-foreground\">\n                    Teams\n                  </DropdownMenuLabel>\n                  {data.teams.map((team, index) => (\n                    <DropdownMenuItem\n                      key={team.name}\n                      onClick={() => setActiveTeam(team)}\n                      className=\"gap-2 p-2\"\n                    >\n                      <div className=\"flex size-6 items-center justify-center rounded-sm border\">\n                        <team.logo className=\"size-4 shrink-0\" />\n                      </div>\n                      {team.name}\n                    </DropdownMenuItem>\n                  ))}\n                </DropdownMenuContent>\n              </DropdownMenu>\n            ) : (\n              // Static display for single team (no dropdown functionality)\n              <SidebarMenuButton\n                size=\"lg\"\n                tooltip={`${activeTeam.name} - ${activeTeam.plan}`}\n              >\n                <div className=\"flex aspect-square size-8 items-center justify-center rounded-lg bg-sidebar-primary text-sidebar-primary-foreground\">\n                  <activeTeam.logo className=\"size-4\" />\n                </div>\n                <div className=\"grid flex-1 text-left text-sm leading-tight group-data-[collapsible=icon]:hidden\">\n                  <span className=\"truncate font-semibold\">\n                    {activeTeam.name}\n                  </span>\n                  <span className=\"truncate text-xs\">{activeTeam.plan}</span>\n                </div>\n                {/* No chevron for single team - static display only */}\n              </SidebarMenuButton>\n            )}\n          </SidebarMenuItem>\n        </SidebarMenu>\n      </SidebarHeader>\n\n      <SidebarContent>\n        <SidebarGroup>\n          <SidebarGroupLabel>Platform</SidebarGroupLabel>\n          <SidebarMenu>\n            {data.navMain.map((item) => (\n              <Collapsible\n                key={item.title}\n                asChild\n                defaultOpen={item.isActive}\n                className=\"group/collapsible\"\n              >\n                <SidebarMenuItem>\n                  <CollapsibleTrigger asChild>\n                    <SidebarMenuButton tooltip={item.title}>\n                      {item.icon && <item.icon />}\n                      <span>{item.title}</span>\n                      <ChevronRight className=\"ml-auto transition-transform duration-200 group-data-[state=open]/collapsible:rotate-90\" />\n                    </SidebarMenuButton>\n                  </CollapsibleTrigger>\n                  <CollapsibleContent>\n                    <SidebarMenuSub>\n                      {item.items?.map((subItem) => (\n                        <SidebarMenuSubItem key={subItem.title}>\n                          <SidebarMenuSubButton asChild>\n                            <a href={subItem.url}>\n                              <span>{subItem.title}</span>\n                            </a>\n                          </SidebarMenuSubButton>\n                        </SidebarMenuSubItem>\n                      ))}\n                    </SidebarMenuSub>\n                  </CollapsibleContent>\n                </SidebarMenuItem>\n              </Collapsible>\n            ))}\n          </SidebarMenu>\n        </SidebarGroup>\n        <SidebarGroup className=\"group-data-[collapsible=icon]:hidden\">\n          <SidebarGroupLabel>Projects</SidebarGroupLabel>\n          <SidebarMenu>\n            {data.projects.map((item) => (\n              <SidebarMenuItem key={item.name}>\n                <SidebarMenuButton asChild>\n                  <a href={item.url}>\n                    <item.icon />\n                    <span>{item.name}</span>\n                  </a>\n                </SidebarMenuButton>\n              </SidebarMenuItem>\n            ))}\n          </SidebarMenu>\n        </SidebarGroup>\n      </SidebarContent>\n\n      <SidebarFooter className=\"border-t border-sidebar-border\">\n        <SidebarMenu>\n          <SidebarMenuItem>\n            <DropdownMenu>\n              <DropdownMenuTrigger asChild>\n                <SidebarMenuButton\n                  size=\"lg\"\n                  className=\"data-[state=open]:bg-sidebar-accent data-[state=open]:text-sidebar-accent-foreground\"\n                >\n                  <Avatar className=\"h-8 w-8\">\n                    <AvatarImage src={data.user.avatar} alt={data.user.name} />\n                    <AvatarFallback>CN</AvatarFallback>\n                  </Avatar>\n                  <div className=\"grid flex-1 text-left text-sm leading-tight\">\n                    <span className=\"truncate font-semibold\">\n                      {data.user.name}\n                    </span>\n                    <span className=\"truncate text-xs\">{data.user.email}</span>\n                  </div>\n                  <ChevronsUpDown className=\"ml-auto size-4\" />\n                </SidebarMenuButton>\n              </DropdownMenuTrigger>\n              <DropdownMenuContent\n                className=\"w-[--radix-dropdown-menu-trigger-width] min-w-56 rounded-lg\"\n                side=\"bottom\"\n                align=\"end\"\n                sideOffset={4}\n              >\n                <DropdownMenuLabel className=\"p-0 font-normal\">\n                  <div className=\"flex items-center gap-2 px-1 py-1.5 text-left text-sm\">\n                    <Avatar className=\"h-8 w-8\">\n                      <AvatarImage\n                        src={data.user.avatar}\n                        alt={data.user.name}\n                      />\n                      <AvatarFallback>CN</AvatarFallback>\n                    </Avatar>\n                    <div className=\"grid flex-1 text-left text-sm leading-tight\">\n                      <span className=\"truncate font-semibold\">\n                        {data.user.name}\n                      </span>\n                      <span className=\"truncate text-xs\">\n                        {data.user.email}\n                      </span>\n                    </div>\n                  </div>\n                </DropdownMenuLabel>\n                <DropdownMenuSeparator />\n                <DropdownMenuGroup>\n                  <DropdownMenuItem>\n                    <Settings2 />\n                    Account\n                  </DropdownMenuItem>\n                </DropdownMenuGroup>\n                <DropdownMenuSeparator />\n                <DropdownMenuItem>\n                  <LogOut />\n                  Log out\n                </DropdownMenuItem>\n              </DropdownMenuContent>\n            </DropdownMenu>\n          </SidebarMenuItem>\n        </SidebarMenu>\n      </SidebarFooter>\n      <SidebarRail />\n    </Sidebar>\n  );\n}\n"
    },
    {
      "path": "src/components/ui/header.tsx",
      "type": "registry:component",
      "target": "components/ui/header.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { cn } from \"@/lib/utils\";\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbList,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n} from \"@/components/ui/breadcrumb\";\n\n/**\n * Header component for creating flexible headers that can contain controls for panels.\n *\n * Features:\n * - Flexible layout with left and right content areas\n * - Built-in breadcrumb support\n * - Button and control placement on the right\n * - Consistent styling with design system\n * - Responsive design\n *\n * @example\n * ```tsx\n * <Header\n *   breadcrumbs={[\n *     { label: \"Home\", href: \"/\" },\n *     { label: \"Weather Dashboard\", href: \"/dashboard\" }\n *   ]}\n *   rightContent={<Button>Secondary</Button>}\n * />\n * ```\n */\n\ninterface BreadcrumbItem {\n  label: string;\n  href?: string;\n}\n\ninterface HeaderProps {\n  /** Breadcrumb navigation items */\n  breadcrumbs?: BreadcrumbItem[];\n  /** Content to display on the left side (overrides breadcrumbs) */\n  leftContent?: React.ReactNode;\n  /** Content to display on the right side (buttons, controls, etc.) */\n  rightContent?: React.ReactNode;\n  /** Additional CSS classes */\n  className?: string;\n}\n\n/**\n * Header component for creating flexible headers with breadcrumbs and controls.\n *\n * @param props - Header component props\n * @returns JSX element\n */\nexport function Header({\n  breadcrumbs,\n  leftContent,\n  rightContent,\n  className,\n  ...props\n}: HeaderProps) {\n  return (\n    <header\n      className={cn(\n        \"flex w-full h-12 items-center justify-between border-b border-border bg-background px-3 py-2 shadow-sm\",\n        className\n      )}\n      {...props}\n    >\n      {/* Left side content */}\n      <div className=\"flex items-center\">\n        {leftContent ? (\n          leftContent\n        ) : breadcrumbs ? (\n          <Breadcrumb>\n            <BreadcrumbList>\n              {breadcrumbs.map((item, index) => (\n                <React.Fragment key={index}>\n                  {index > 0 && <BreadcrumbSeparator />}\n                  <BreadcrumbItem>\n                    {item.href ? (\n                      <BreadcrumbLink href={item.href}>\n                        {item.label}\n                      </BreadcrumbLink>\n                    ) : (\n                      <BreadcrumbPage>{item.label}</BreadcrumbPage>\n                    )}\n                  </BreadcrumbItem>\n                </React.Fragment>\n              ))}\n            </BreadcrumbList>\n          </Breadcrumb>\n        ) : null}\n      </div>\n\n      {/* Right side content */}\n      {rightContent && (\n        <div className=\"flex items-center space-x-2\">\n          {rightContent}\n        </div>\n      )}\n    </header>\n  );\n}\n"
    },
    {
      "path": "src/components/ui/sonner.tsx",
      "type": "registry:component",
      "target": "components/ui/sonner.tsx",
      "content": "\"use client\";\n\nimport { type CSSProperties } from \"react\";\nimport { useEffect, useState } from \"react\";\n\n/**\n * Sonner Toast Component with v0 Compatibility\n *\n * **IMPORTANT FOR v0: This component uses button-specific CSS variables for action buttons.\n * DO NOT use generic variables like --primary, --secondary, etc.\n * ONLY use the --button-* variables for consistent theming.**\n */\n\n// Fallback toast component when sonner fails to load\nconst FallbackToaster = () => {\n  return (\n    <div\n      className=\"fixed top-4 right-4 z-50 pointer-events-none\"\n      style={{\n        '--normal-bg': 'var(--popover)',\n        '--normal-text': 'var(--popover-foreground)',\n        '--normal-border': 'var(--border)',\n      } as CSSProperties}\n    >\n      {/* Fallback toast container - will show console message instead */}\n    </div>\n  );\n};\n\nconst Toaster = ({ ...props }: any) => {\n  const [Sonner, setSonner] = useState<any>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const loadSonner = async () => {\n      try {\n        const sonnerModule = await import(\"sonner\");\n        setSonner(() => sonnerModule.Toaster);\n      } catch (error) {\n        console.warn(\"Sonner package failed to load, using fallback toast implementation\");\n        setSonner(null);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    loadSonner();\n  }, []);\n\n  // Show fallback while loading or if sonner failed to load\n  if (isLoading || !Sonner) {\n    return <FallbackToaster />;\n  }\n\n  return (\n    <Sonner\n      theme=\"system\"\n      className=\"toaster group\"\n      toastOptions={{\n          classNames: {\n              toast: \"!p-3 !rounded-lg\",\n              title: \"!font-normal\",\n              description: \"!text-popover-foreground !font-normal\",\n              success: \"[&>div>svg]:!text-green-600\",\n              warning: \"[&>div>svg]:!text-yellow-600\",\n              error: \"[&>div>svg]:!text-red-600\",\n              actionButton: \"toast-action-button !bg-button-secondary !border !border-border !text-button-secondary-foreground hover:!bg-button-secondary-hover !inline-flex !items-center !justify-center !gap-1.5 !whitespace-nowrap !rounded-md !text-sm !transition-all !disabled:pointer-events-none !disabled:opacity-50 [&_svg]:!pointer-events-none [&_svg:not([class*='size-'])]:!size-4 !shrink-0 [&_svg]:!shrink-0 !outline-none focus-visible:!border-ring focus-visible:!ring-ring/50 focus-visible:!ring-[3px] aria-invalid:!ring-destructive/20 dark:aria-invalid:!ring-destructive/40 aria-invalid:!border-destructive !h-6 !px-3 has-[>svg]:!px-2.5\",\n          },\n      }}\n      style={\n        {\n          \"--normal-bg\": \"var(--popover)\",\n          \"--normal-text\": \"var(--popover-foreground)\",\n          \"--normal-description\": \"var(--popover-foreground)\",\n          \"--normal-border\": \"var(--border)\",\n        } as CSSProperties\n      }\n      {...props}\n    />\n  );\n};\n\nexport { Toaster };\n"
    },
    {
      "path": "src/app/demo/[name]/blocks/filtered-content-layout-page.tsx",
      "type": "registry:page",
      "target": "app/page.tsx",
      "content": "\"use client\";\n\n/**\n * Filtered Content Layout Page Component\n *\n * A two-panel layout with filtering capabilities and sidebar navigation:\n * - BrandSidebar for navigation\n * - Header with breadcrumbs for navigation\n * - Left panel (30%): Filter controls and search options\n * - Right panel (70%): Filtered content results\n * - Responsive design - panels stack vertically on mobile\n * - Uses Panel component from the design system\n *\n * This component provides a flexible foundation for applications\n * that need filtering capabilities like search results, product catalogs,\n * data tables, or any content that requires filtering and sorting.\n *\n * @returns JSX element with filtered content layout\n */\nimport { BrandSidebar } from \"@/components/brand-sidebar\";\nimport { Panel } from \"@/components/panel\";\nimport { Button } from \"@/components/ui/button\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { Header } from \"@/components/ui/header\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { SidebarProvider } from \"@/components/ui/sidebar\";\nimport { Slider } from \"@/components/ui/slider\";\nimport { Toaster } from \"@/components/ui/sonner\";\nimport { Inbox } from \"lucide-react\";\nimport { useState } from \"react\";\n\nexport default function FilteredContentLayoutPage() {\n  const [isLeftPanelOpen, setIsLeftPanelOpen] = useState(true);\n\n  return (\n    <SidebarProvider>\n      <BrandSidebar />\n      <main className=\"flex-1 flex flex-col\">\n        {/* Header with breadcrumbs */}\n        <Header\n              leftContent={\n                <div className=\"flex items-center space-x-2\">\n                  <Button\n                    variant={isLeftPanelOpen ? \"secondary\" : \"ghost\"}\n                    size=\"icon\"\n                    onClick={() => setIsLeftPanelOpen(!isLeftPanelOpen)}\n                  >\n                    <Inbox className=\"h-4 w-4\" />\n                  </Button>\n                  <div className=\"flex items-center\">\n                    <span className=\"text-sm text-muted-foreground\">Home</span>\n                    <span className=\"mx-2 text-muted-foreground\">/</span>\n                    <span className=\"text-sm font-medium\">Filtered Content</span>\n                  </div>\n                </div>\n              }\n              rightContent={<Button variant=\"outline\">Export Results</Button>}\n            />\n\n            {/* Two Panel Layout */}\n            <div className=\"flex flex-col md:flex-row flex-1 overflow-hidden\">\n              {/* Left Panel - Filters & Controls (max 280px width) */}\n              <div\n                className={`transition-all duration-300 ease-in-out ${isLeftPanelOpen ? \"w-full md:max-w-[280px] md:w-[280px] opacity-100\" : \"w-0 max-w-0 opacity-0 overflow-hidden\"}`}\n              >\n                <Panel\n                  size=\"fit\"\n                  responsive={{ md: \"fit\" }}\n                  title=\"Filters & Controls\"\n                  height=\"full\"\n                  className=\"w-full md:max-w-[280px] md:w-[280px] flex-shrink-0\"\n                  footer={\n                    <div className=\"flex justify-between items-center w-full\">\n                      <div className=\"flex items-center space-x-1\">\n                        <span className=\"text-sm text-muted-foreground\">\n                          5 items selected\n                        </span>\n                        <svg\n                          className=\"w-3 h-3 text-muted-foreground\"\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          viewBox=\"0 0 24 24\"\n                        >\n                          <path\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            strokeWidth={2}\n                            d=\"M8 9l4-4 4 4m0 6l-4 4-4-4\"\n                          />\n                        </svg>\n                      </div>\n                      <Button variant=\"ghost\" size=\"sm\">\n                        Clear filter\n                      </Button>\n                    </div>\n                  }\n                >\n                  <div className=\"space-y-6 pb-4\">\n                    {/* Search Input */}\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"search\">Search</Label>\n                      <div className=\"relative\">\n                        <Input\n                          id=\"search\"\n                          placeholder=\"Search\"\n                          className=\"w-full pr-8\"\n                        />\n                        <svg\n                          className=\"absolute right-2 top-1/2 transform -translate-y-1/2 w-4 h-4 text-muted-foreground\"\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          viewBox=\"0 0 24 24\"\n                        >\n                          <path\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            strokeWidth={2}\n                            d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n                          />\n                        </svg>\n                      </div>\n                    </div>\n\n                    {/* State Selection */}\n                    <div className=\"space-y-2\">\n                      <Label>State</Label>\n                      <Select defaultValue=\"iowa\">\n                        <SelectTrigger className=\"w-full\">\n                          <SelectValue placeholder=\"Select state\" />\n                        </SelectTrigger>\n                        <SelectContent>\n                          <SelectItem value=\"iowa\">Iowa</SelectItem>\n                          <SelectItem value=\"illinois\">Illinois</SelectItem>\n                          <SelectItem value=\"indiana\">Indiana</SelectItem>\n                          <SelectItem value=\"ohio\">Ohio</SelectItem>\n                        </SelectContent>\n                      </Select>\n                    </div>\n\n                    {/* Target Persona */}\n                    <div className=\"space-y-3\">\n                      <Label className=\"text-base font-medium\">Target Persona</Label>\n                      <div className=\"space-y-2\">\n                        <div className=\"flex items-center space-x-2\">\n                          <Checkbox id=\"ag-tech-leader\" defaultChecked />\n                          <Label htmlFor=\"ag-tech-leader\" className=\"text-sm\">\n                            Ag Tech Leader\n                          </Label>\n                        </div>\n                        <div className=\"flex items-center space-x-2\">\n                          <Checkbox id=\"brand-loyalist\" />\n                          <Label htmlFor=\"brand-loyalist\" className=\"text-sm\">\n                            Brand Loyalist\n                          </Label>\n                        </div>\n                        <div className=\"flex items-center space-x-2\">\n                          <Checkbox id=\"sustainable-fashion\" />\n                          <Label htmlFor=\"sustainable-fashion\" className=\"text-sm\">\n                            Sustainable Fashion Advocate\n                          </Label>\n                        </div>\n                        <div className=\"flex items-center space-x-2\">\n                          <Checkbox id=\"digital-marketing\" />\n                          <Label htmlFor=\"digital-marketing\" className=\"text-sm\">\n                            Digital Marketing Innovator\n                          </Label>\n                        </div>\n                        <div className=\"flex items-center space-x-2\">\n                          <Checkbox id=\"remote-work\" />\n                          <Label htmlFor=\"remote-work\" className=\"text-sm\">\n                            Remote Work Enthusiast\n                          </Label>\n                        </div>\n                        <div className=\"flex items-center space-x-2\">\n                          <Checkbox id=\"health-wellness\" />\n                          <Label htmlFor=\"health-wellness\" className=\"text-sm\">\n                            Health and Wellness Guru\n                          </Label>\n                        </div>\n                      </div>\n                    </div>\n\n                    {/* Preferred Contact Method */}\n                    <div className=\"space-y-3\">\n                      <Label className=\"text-base font-medium\">\n                        Preferred Contact Method\n                      </Label>\n                      <div className=\"space-y-2\">\n                        <div className=\"flex items-center space-x-2\">\n                          <Checkbox id=\"phone\" defaultChecked />\n                          <Label htmlFor=\"phone\" className=\"text-sm\">\n                            Phone number\n                          </Label>\n                        </div>\n                        <div className=\"flex items-center space-x-2\">\n                          <Checkbox id=\"email\" />\n                          <Label htmlFor=\"email\" className=\"text-sm\">\n                            Email\n                          </Label>\n                        </div>\n                        <div className=\"flex items-center space-x-2\">\n                          <Checkbox id=\"company\" />\n                          <Label htmlFor=\"company\" className=\"text-sm\">\n                            Company name\n                          </Label>\n                        </div>\n                      </div>\n                    </div>\n\n                    {/* Role Selection */}\n                    <div className=\"space-y-2\">\n                      <Label className=\"text-base font-medium\">Role</Label>\n                      <Select>\n                        <SelectTrigger className=\"w-full\">\n                          <SelectValue placeholder=\"Select\" />\n                        </SelectTrigger>\n                        <SelectContent>\n                          <SelectItem value=\"farmer\">Farmer</SelectItem>\n                          <SelectItem value=\"manager\">Farm Manager</SelectItem>\n                          <SelectItem value=\"consultant\">\n                            Agricultural Consultant\n                          </SelectItem>\n                          <SelectItem value=\"researcher\">Researcher</SelectItem>\n                        </SelectContent>\n                      </Select>\n                    </div>\n\n                    {/* Planted Area */}\n                    <div className=\"space-y-4\">\n                      <Label className=\"text-base font-medium\">Planted Area</Label>\n\n                      <div className=\"space-y-2\">\n                        <Label className=\"text-sm\">Crop</Label>\n                        <Select defaultValue=\"all\">\n                          <SelectTrigger className=\"w-full\">\n                            <SelectValue placeholder=\"Select crop\" />\n                          </SelectTrigger>\n                          <SelectContent>\n                            <SelectItem value=\"all\">All Crops</SelectItem>\n                            <SelectItem value=\"corn\">Corn</SelectItem>\n                            <SelectItem value=\"soybeans\">Soybeans</SelectItem>\n                            <SelectItem value=\"wheat\">Wheat</SelectItem>\n                            <SelectItem value=\"cotton\">Cotton</SelectItem>\n                          </SelectContent>\n                        </Select>\n                      </div>\n\n                      <div className=\"space-y-2\">\n                        <Label className=\"text-sm\">Acres Planted</Label>\n                        <div className=\"px-2\">\n                          <div className=\"text-sm text-muted-foreground mb-2\">\n                            100 to 250\n                          </div>\n                          <Slider\n                            defaultValue={[100, 250]}\n                            max={500}\n                            step={10}\n                            className=\"w-full\"\n                          />\n                          <div className=\"flex justify-between text-xs text-muted-foreground mt-1\">\n                            <span>0</span>\n                            <span>500</span>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n\n                    {/* Farm Revenue */}\n                    <div className=\"space-y-4\">\n                      <Label className=\"text-base font-medium\">Farm Revenue</Label>\n\n                      <div className=\"space-y-2\">\n                        <Label className=\"text-sm\">Revenue Type</Label>\n                        <Select defaultValue=\"total\">\n                          <SelectTrigger className=\"w-full\">\n                            <SelectValue placeholder=\"Select type\" />\n                          </SelectTrigger>\n                          <SelectContent>\n                            <SelectItem value=\"total\">Total</SelectItem>\n                            <SelectItem value=\"gross\">Gross</SelectItem>\n                            <SelectItem value=\"net\">Net</SelectItem>\n                          </SelectContent>\n                        </Select>\n                      </div>\n\n                      <div className=\"space-y-2\">\n                        <Label className=\"text-sm\">Revenue Range</Label>\n                        <div className=\"px-2\">\n                          <div className=\"text-sm text-muted-foreground mb-2\">\n                            100 to 600\n                          </div>\n                          <Slider\n                            defaultValue={[100, 600]}\n                            max={1500}\n                            step={50}\n                            className=\"w-full\"\n                          />\n                          <div className=\"flex justify-between text-xs text-muted-foreground mt-1\">\n                            <span>0</span>\n                            <span>1500</span>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n\n                    {/* Farm Manager Type */}\n                    <div className=\"space-y-2\">\n                      <Label className=\"text-base font-medium\">\n                        Farm Manager Type\n                      </Label>\n                      <Select>\n                        <SelectTrigger className=\"w-full\">\n                          <SelectValue placeholder=\"Select Farm Manager\" />\n                        </SelectTrigger>\n                        <SelectContent>\n                          <SelectItem value=\"owner-operator\">\n                            Owner/Operator\n                          </SelectItem>\n                          <SelectItem value=\"hired-manager\">Hired Manager</SelectItem>\n                          <SelectItem value=\"family-member\">Family Member</SelectItem>\n                          <SelectItem value=\"consultant\">Consultant</SelectItem>\n                        </SelectContent>\n                      </Select>\n                    </div>\n\n                    {/* Gross Farm Income */}\n                    <div className=\"space-y-4\">\n                      <Label className=\"text-base font-medium\">\n                        Gross Farm Income\n                      </Label>\n                      <div className=\"grid grid-cols-2 gap-3\">\n                        <div className=\"space-y-1\">\n                          <Label className=\"text-sm\">Min.</Label>\n                          <div className=\"relative\">\n                            <Input type=\"number\" placeholder=\"0\" className=\"pr-12\" />\n                            <span className=\"absolute right-2 top-1/2 transform -translate-y-1/2 text-xs text-muted-foreground\">\n                              USD\n                            </span>\n                          </div>\n                        </div>\n                        <div className=\"space-y-1\">\n                          <Label className=\"text-sm\">Max.</Label>\n                          <div className=\"relative\">\n                            <Input type=\"number\" placeholder=\"0\" className=\"pr-12\" />\n                            <span className=\"absolute right-2 top-1/2 transform -translate-y-1/2 text-xs text-muted-foreground\">\n                              USD\n                            </span>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n\n                    {/* Apply Filter Button */}\n                    <Button className=\"w-full\">Apply Filter</Button>\n                  </div>\n                </Panel>\n              </div>\n\n              {/* Right Panel - Content Results (70% width) */}\n              <Panel\n                size=\"full\"\n                responsive={{ md: \"full\" }}\n                title=\"Content Results\"\n                height=\"full\"\n                className=\"w-full md:w-[70%] flex-1\"\n                borderRight={false}\n                footer={\n                  <div className=\"flex justify-between items-center w-full\">\n                    <span className=\"text-sm text-muted-foreground\">\n                      Showing 1-10 of 47 results\n                    </span>\n                    <div className=\"flex space-x-2\">\n                      <Button variant=\"outline\" size=\"sm\">\n                        Previous\n                      </Button>\n                      <Button variant=\"outline\" size=\"sm\">\n                        Next\n                      </Button>\n                    </div>\n                  </div>\n                }\n              >\n                {/* Content area - ready for your filtered results */}\n                <div className=\"flex items-center justify-center h-full text-muted-foreground\">\n                  <p>Content area - ready for your filtered results</p>\n                </div>\n              </Panel>\n          </div>\n          <Toaster />\n      </main>\n    </SidebarProvider>\n  );\n}\n"
    },
    {
      "path": "src/components/panel.tsx",
      "type": "registry:component",
      "content": "\"use client\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { cn } from \"@/lib/utils\";\nimport type * as React from \"react\";\n// Removed external component imports for v0 compatibility\n\n/**\n * Panel component for creating flexible layouts with header, content, and footer areas.\n *\n * Features:\n * - Responsive sizing with flexible column system\n * - Header with title and action button\n * - Content area with proper spacing\n * - Footer with status information\n * - Customizable alignment and justification\n * - Border and styling options\n *\n * @example\n * ```tsx\n * // Basic panel with default 100% height (fills parent container)\n * <Panel size=\"4\" title=\"My Panel\" footer={<span>Status: Active</span>}>\n *   <div>Panel content goes here</div>\n * </Panel>\n *\n * // Panel with full screen height (100vh)\n * <Panel height=\"screen\" title=\"My Panel\">\n *   <div>Panel content goes here</div>\n * </Panel>\n *\n * // Panel with custom header and full height\n * <Panel height=\"full\" header={\n *   <div className=\"flex items-center justify-between w-full\">\n *     <h6>Custom Header</h6>\n *     <Button size=\"sm\">Action</Button>\n *   </div>\n * }>\n *   <div>Panel content with custom header</div>\n * </Panel>\n *\n * // Panel with responsive sizing and full height\n * <Panel\n *   size=\"6\"\n *   height=\"full\"\n *   responsive={{ md: \"4\", lg: \"3\" }}\n *   title=\"Responsive Panel\"\n * >\n *   <div>Content adapts to screen size</div>\n * </Panel>\n * ```\n */\n\ntype ColumnSize =\n  | \"auto\"\n  | \"1\"\n  | \"2\"\n  | \"3\"\n  | \"4\"\n  | \"5\"\n  | \"6\"\n  | \"12\"\n  | \"full\"\n  | \"fit\";\n\n/**\n * Props for the Panel component\n */\ninterface PanelProps {\n  /** Sizing */\n  /** Panel size using flexible column system */\n  size?: ColumnSize;\n  /** Responsive sizing for different breakpoints */\n  responsive?: {\n    sm?: ColumnSize;\n    md?: ColumnSize;\n    lg?: ColumnSize;\n    xl?: ColumnSize;\n  };\n\n  /** Layout */\n  /** Vertical alignment of panel content */\n  align?: \"start\" | \"center\" | \"end\" | \"stretch\";\n  /** Horizontal justification of panel content */\n  justify?: \"start\" | \"center\" | \"end\" | \"between\" | \"around\" | \"evenly\";\n\n  /** Content areas */\n  /** Panel title displayed in header */\n  title?: string;\n  /** Custom header content (overrides title) */\n  header?: React.ReactNode;\n  /** Whether to hide the header completely */\n  hideHeader?: boolean;\n  /** Main panel content */\n  children?: React.ReactNode;\n  /** Footer content with status information */\n  footer?: React.ReactNode;\n  /** Whether to hide the footer completely */\n  hideFooter?: boolean;\n\n  /** Styling */\n  /** Whether to show right border */\n  borderRight?: boolean;\n  /** Height behavior: 'screen' for 100vh, 'full' for 100% of parent */\n  height?: \"screen\" | \"full\";\n  /** Additional CSS classes */\n  className?: string;\n}\n\nconst sizeClasses = {\n  auto: \"flex-auto\",\n  \"1\": \"flex-[0_0_8.333333%]\",\n  \"2\": \"flex-[0_0_16.666667%]\",\n  \"3\": \"flex-[0_0_25%]\",\n  \"4\": \"flex-[0_0_33.333333%]\",\n  \"5\": \"flex-[0_0_41.666667%]\",\n  \"6\": \"flex-[0_0_50%]\",\n  \"12\": \"flex-[0_0_100%]\",\n  full: \"flex-1\",\n  fit: \"flex-none\",\n};\n\nconst alignClasses = {\n  start: \"items-start\",\n  center: \"items-center\",\n  end: \"items-end\",\n  stretch: \"items-stretch\",\n};\n\nconst justifyClasses = {\n  start: \"justify-start\",\n  center: \"justify-center\",\n  end: \"justify-end\",\n  between: \"justify-between\",\n  around: \"justify-around\",\n  evenly: \"justify-evenly\",\n};\n\nconst getResponsiveClasses = (responsive?: PanelProps[\"responsive\"]) => {\n  if (!responsive) return \"\";\n\n  const classes: string[] = [];\n\n  if (responsive.sm) classes.push(`sm:${sizeClasses[responsive.sm]}`);\n  if (responsive.md) classes.push(`md:${sizeClasses[responsive.md]}`);\n  if (responsive.lg) classes.push(`lg:${sizeClasses[responsive.lg]}`);\n  if (responsive.xl) classes.push(`xl:${sizeClasses[responsive.xl]}`);\n\n  return classes.join(\" \");\n};\n\n/**\n * Panel component for creating flexible layouts with header, content, and footer areas.\n *\n * @param props - Panel component props\n * @returns JSX element\n */\nexport function Panel({\n  size = \"auto\",\n  responsive,\n  align = \"stretch\",\n  justify = \"start\",\n  title = \"Panel\",\n  header,\n  hideHeader = false,\n  children,\n  footer,\n  hideFooter = false,\n  borderRight = true,\n  height = \"full\",\n  className,\n  ...props\n}: PanelProps) {\n  const baseSizeClass = sizeClasses[size];\n  const responsiveClasses = getResponsiveClasses(responsive);\n\n  // Determine height class based on height prop\n  const heightClass = height === \"screen\" ? \"h-screen\" : \"h-full\";\n\n  return (\n    <div\n      className={cn(\n        \"relative flex flex-col\",\n        heightClass,\n        borderRight && \"border-r border-border\",\n        baseSizeClass,\n        responsiveClasses,\n        alignClasses[align],\n        justifyClasses[justify],\n        className,\n      )}\n      {...props}\n    >\n      {!hideHeader && (\n        <div className=\"absolute top-0 left-0 right-0 z-10 flex w-full h-12 px-3 py-2 justify-between items-center border-b border-border bg-background shadow-sm\">\n          {header ? (\n            header\n          ) : (\n            <>\n              <h6>{title}</h6>\n              <Button variant=\"ghost\" size=\"icon\">\n                <svg\n                  className=\"size-4\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    d=\"M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z\"\n                  />\n                </svg>\n              </Button>\n            </>\n          )}\n        </div>\n      )}\n\n      {children && (\n        <div\n          className={cn(\n            \"flex-1 w-full p-3 items-start self-stretch bg-background overflow-y-auto\",\n            !hideHeader && \"pt-12\", // 48px for header + 12px spacing\n            !hideHeader && \"pt-[60px]\", // 48px for header + 12px spacing\n            hideHeader && \"pt-0\", // No top padding when header is hidden\n            !hideFooter && footer && \"pb-12\", // Bottom padding only when footer exists and not hidden\n            hideFooter && \"pb-0\", // No bottom padding when footer is hidden\n          )}\n        >\n          {children}\n        </div>\n      )}\n\n      {!hideFooter && footer && (\n        <div className=\"absolute bottom-0 left-0 right-0 z-10 flex w-full h-12 min-h-10 px-3 py-2 justify-between items-center border-t border-border bg-background text-muted-foreground text-sm\">\n          {footer}\n        </div>\n      )}\n    </div>\n  );\n}\n"
    }
  ]
}