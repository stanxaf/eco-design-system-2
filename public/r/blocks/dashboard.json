{
  "name": "dashboard",
  "type": "registry:block",
  "title": "Dashboard",
  "description": "A dashboard application with embedded sidebar and header",
  "registryDependencies": [
    "https://eco-design-system-2.vercel.app/r/styles/badge.json",
    "https://eco-design-system-2.vercel.app/r/styles/button.json",
    "https://eco-design-system-2.vercel.app/r/styles/sidebar.json",
    "https://eco-design-system-2.vercel.app/r/styles/card.json",
    "https://eco-design-system-2.vercel.app/r/styles/avatar.json",
    "https://eco-design-system-2.vercel.app/r/styles/dropdown-menu.json",
    "https://eco-design-system-2.vercel.app/r/styles/collapsible.json",
    "https://eco-design-system-2.vercel.app/r/styles/icons.json",
    "https://eco-design-system-2.vercel.app/r/themes/theme.json"
  ],
  "files": [
    {
      "path": "src/layouts/minimal-layout.tsx",
      "type": "registry:file",
      "target": "app/layout.tsx",
      "content": "import { Geist_Mono, Inter, Montserrat } from \"next/font/google\";\nimport React, { type ReactNode } from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nimport \"@/app/globals.css\";\n\nconst InterSans = Inter({\n  subsets: [\"latin\"],\n  variable: \"--font-sans\",\n});\n\nconst GeistMono = Geist_Mono({\n  subsets: [\"latin\"],\n  variable: \"--font-mono\",\n});\n\nconst MontserratSerif = Montserrat({\n  subsets: [\"latin\"],\n  variable: \"--font-serif\",\n});\n\nexport default function RootLayout({\n  children,\n}: Readonly<{\n  children: ReactNode;\n}>) {\n  return (\n    <html\n      lang=\"en\"\n      className={cn(\n        InterSans.variable,\n        GeistMono.variable,\n        MontserratSerif.variable,\n        \"bg-background text-foreground\",\n      )}\n    >\n      <body>\n        <main className=\"flex w-full\">\n          <div className=\"w-full\">{children}</div>\n        </main>\n      </body>\n    </html>\n  );\n}\n"
    },
    {
      "path": "src/components/brand-sidebar.tsx",
      "type": "registry:component",
      "target": "components/brand-sidebar.tsx",
      "content": "\"use client\";\n\nimport {\n  AudioWaveform,\n  BookOpen,\n  Bot,\n  ChevronRight,\n  ChevronsUpDown,\n  Command,\n  Frame,\n  GalleryVerticalEnd,\n  LogOut,\n  Map,\n  PieChart,\n  Settings2,\n  SquareTerminal,\n} from \"lucide-react\";\nimport * as React from \"react\";\n\nimport { Logo } from \"@/components/logo\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport {\n  Collapsible,\n  CollapsibleContent,\n  CollapsibleTrigger,\n} from \"@/components/ui/collapsible\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport { LogoContainer } from \"@/components/ui/logo-container\";\nimport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarMenu,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarRail,\n} from \"@/components/ui/sidebar\";\n\n/**\n * Props for the BrandSidebar component\n */\ninterface BrandSidebarProps {\n  /** Additional CSS classes to apply to the sidebar container */\n  className?: string;\n  /** Force the team switcher to be visible even with single team (for testing/admin) */\n  forceTeamSwitcherVisible?: boolean;\n}\n\n// This is sample data.\n// QA: To test single team behavior, change teams array to have only one item:\n// teams: [{ name: \"Acme Inc\", logo: GalleryVerticalEnd, plan: \"Enterprise\" }]\nconst data = {\n  user: {\n    name: \"John Doe\",\n    email: \"john.doe@example.com\",\n    avatar: \"/avatars/shadcn.jpg\",\n  },\n  teams: [\n    {\n      name: \"DTN\",\n      logo: Logo,\n      plan: \"Identity Management\",\n    },\n    {\n      name: \"Acme Corp.\",\n      logo: AudioWaveform,\n      plan: \"Fuel Hub\",\n    },\n    {\n      name: \"Evil Corp.\",\n      logo: Command,\n      plan: \"Weather Hub\",\n    },\n  ],\n  navMain: [\n    {\n      title: \"Playground\",\n      url: \"#\",\n      icon: SquareTerminal,\n      isActive: true,\n      items: [\n        {\n          title: \"History\",\n          url: \"#\",\n        },\n        {\n          title: \"Starred\",\n          url: \"#\",\n        },\n        {\n          title: \"Settings\",\n          url: \"#\",\n        },\n      ],\n    },\n    {\n      title: \"Models\",\n      url: \"#\",\n      icon: Bot,\n      items: [\n        {\n          title: \"Genesis\",\n          url: \"#\",\n        },\n        {\n          title: \"Explorer\",\n          url: \"#\",\n        },\n        {\n          title: \"Quantum\",\n          url: \"#\",\n        },\n      ],\n    },\n    {\n      title: \"Documentation\",\n      url: \"#\",\n      icon: BookOpen,\n      items: [\n        {\n          title: \"Introduction\",\n          url: \"#\",\n        },\n        {\n          title: \"Get Started\",\n          url: \"#\",\n        },\n        {\n          title: \"Tutorials\",\n          url: \"#\",\n        },\n        {\n          title: \"Changelog\",\n          url: \"#\",\n        },\n      ],\n    },\n    {\n      title: \"Settings\",\n      url: \"#\",\n      icon: Settings2,\n      items: [\n        {\n          title: \"General\",\n          url: \"#\",\n        },\n        {\n          title: \"Team\",\n          url: \"#\",\n        },\n        {\n          title: \"Billing\",\n          url: \"#\",\n        },\n        {\n          title: \"Limits\",\n          url: \"#\",\n        },\n      ],\n    },\n  ],\n  projects: [\n    {\n      name: \"Design Engineering\",\n      url: \"#\",\n      icon: Frame,\n    },\n    {\n      name: \"Sales & Marketing\",\n      url: \"#\",\n      icon: PieChart,\n    },\n    {\n      name: \"Travel\",\n      url: \"#\",\n      icon: Map,\n    },\n  ],\n};\n\n/**\n * BrandSidebar - A navigation sidebar component\n *\n * Based on the shadcn/ui sidebar-07 example that collapses to icons.\n * Features workspace switcher, collapsible nav sections, and user menu.\n *\n * IMPORTANT: Must be wrapped in SidebarProvider\n *\n * @example\n * ```tsx\n * import { SidebarProvider } from \"@/components/ui/sidebar\";\n * import { BrandSidebar } from \"@/components/brand-sidebar\";\n *\n * <SidebarProvider>\n *   <BrandSidebar />\n *   <main>\n *     <h1>Main Content</h1>\n *   </main>\n * </SidebarProvider>\n * ```\n */\nexport function BrandSidebar({\n  className,\n  forceTeamSwitcherVisible = false,\n}: BrandSidebarProps) {\n  const [activeTeam, setActiveTeam] = React.useState(data.teams[0]);\n\n  // Determine if team switcher should be visible\n  const hasMultipleTeams = data.teams.length > 1;\n  const showTeamSwitcher = hasMultipleTeams || forceTeamSwitcherVisible;\n\n  return (\n    <Sidebar collapsible=\"icon\" className={className}>\n      <SidebarHeader className=\"min-h-[48px] justify-center border-b border-sidebar-border\">\n        <SidebarMenu>\n          <SidebarMenuItem>\n            {showTeamSwitcher ? (\n              // Full dropdown menu for multiple teams or forced visibility\n              <DropdownMenu>\n                <DropdownMenuTrigger asChild>\n                  <SidebarMenuButton\n                    size=\"lg\"\n                    className=\"data-[state=open]:bg-sidebar-accent data-[state=open]:text-sidebar-accent-foreground group-data-[collapsible=icon]:gap-0 group-data-[collapsible=icon]:justify-center\"\n                  >\n                    <LogoContainer logo={activeTeam.logo} className=\"size-6\" />\n                    <div className=\"grid flex-1 text-left text-sm leading-tight group-data-[collapsible=icon]:hidden group-data-[collapsible=icon]:flex-none\">\n                      <span className=\"truncate font-semibold\">\n                        {activeTeam.name}\n                      </span>\n                      <span className=\"truncate text-xs\">\n                        {activeTeam.plan}\n                      </span>\n                    </div>\n                    <ChevronsUpDown className=\"ml-auto group-data-[collapsible=icon]:hidden\" />\n                  </SidebarMenuButton>\n                </DropdownMenuTrigger>\n                <DropdownMenuContent\n                  className=\"w-[--radix-dropdown-menu-trigger-width] min-w-56 rounded-lg\"\n                  align=\"start\"\n                  side=\"bottom\"\n                  sideOffset={4}\n                >\n                  <DropdownMenuLabel className=\"text-xs text-muted-foreground\">\n                    Teams\n                  </DropdownMenuLabel>\n                  {data.teams.map((team, index) => (\n                    <DropdownMenuItem\n                      key={team.name}\n                      onClick={() => setActiveTeam(team)}\n                      className=\"gap-2 p-2\"\n                    >\n                      <LogoContainer logo={team.logo} />\n                      {team.name}\n                    </DropdownMenuItem>\n                  ))}\n                </DropdownMenuContent>\n              </DropdownMenu>\n            ) : (\n              // Static display for single team (no dropdown functionality)\n              <SidebarMenuButton\n                size=\"lg\"\n                tooltip={`${activeTeam.name} - ${activeTeam.plan}`}\n                className=\"group-data-[collapsible=icon]:gap-0 group-data-[collapsible=icon]:justify-center\"\n              >\n                <LogoContainer logo={activeTeam.logo} className=\"size-6\" />\n                <div className=\"grid flex-1 text-left text-sm leading-tight group-data-[collapsible=icon]:hidden group-data-[collapsible=icon]:flex-none\">\n                  <span className=\"truncate font-semibold\">\n                    {activeTeam.name}\n                  </span>\n                  <span className=\"truncate text-xs\">{activeTeam.plan}</span>\n                </div>\n                {/* No chevron for single team - static display only */}\n              </SidebarMenuButton>\n            )}\n          </SidebarMenuItem>\n        </SidebarMenu>\n      </SidebarHeader>\n\n      <SidebarContent>\n        <SidebarGroup>\n          <SidebarGroupLabel>Platform</SidebarGroupLabel>\n          <SidebarMenu>\n            {data.navMain.map((item) => (\n              <Collapsible\n                key={item.title}\n                asChild\n                defaultOpen={item.isActive}\n                className=\"group/collapsible\"\n              >\n                <SidebarMenuItem>\n                  <CollapsibleTrigger asChild>\n                    <SidebarMenuButton tooltip={item.title}>\n                      {item.icon && <item.icon />}\n                      <span>{item.title}</span>\n                      <ChevronRight className=\"ml-auto transition-transform duration-200 group-data-[state=open]/collapsible:rotate-90\" />\n                    </SidebarMenuButton>\n                  </CollapsibleTrigger>\n                  <CollapsibleContent>\n                    <SidebarMenuSub>\n                      {item.items?.map((subItem) => (\n                        <SidebarMenuSubItem key={subItem.title}>\n                          <SidebarMenuSubButton asChild>\n                            <a href={subItem.url}>\n                              <span>{subItem.title}</span>\n                            </a>\n                          </SidebarMenuSubButton>\n                        </SidebarMenuSubItem>\n                      ))}\n                    </SidebarMenuSub>\n                  </CollapsibleContent>\n                </SidebarMenuItem>\n              </Collapsible>\n            ))}\n          </SidebarMenu>\n        </SidebarGroup>\n        <SidebarGroup className=\"group-data-[collapsible=icon]:hidden\">\n          <SidebarGroupLabel>Projects</SidebarGroupLabel>\n          <SidebarMenu>\n            {data.projects.map((item) => (\n              <SidebarMenuItem key={item.name}>\n                <SidebarMenuButton asChild>\n                  <a href={item.url}>\n                    <item.icon />\n                    <span>{item.name}</span>\n                  </a>\n                </SidebarMenuButton>\n              </SidebarMenuItem>\n            ))}\n          </SidebarMenu>\n        </SidebarGroup>\n      </SidebarContent>\n\n      <SidebarFooter className=\"border-t border-sidebar-border\">\n        <SidebarMenu>\n          <SidebarMenuItem>\n            <DropdownMenu>\n              <DropdownMenuTrigger asChild>\n                <SidebarMenuButton\n                  size=\"lg\"\n                  className=\"data-[state=open]:bg-sidebar-accent data-[state=open]:text-sidebar-accent-foreground\"\n                >\n                  <Avatar className=\"h-8 w-8\">\n                    <AvatarImage src={data.user.avatar} alt={data.user.name} />\n                    <AvatarFallback>CN</AvatarFallback>\n                  </Avatar>\n                  <div className=\"grid flex-1 text-left text-sm leading-tight\">\n                    <span className=\"truncate font-semibold\">\n                      {data.user.name}\n                    </span>\n                    <span className=\"truncate text-xs\">{data.user.email}</span>\n                  </div>\n                  <ChevronsUpDown className=\"ml-auto size-4\" />\n                </SidebarMenuButton>\n              </DropdownMenuTrigger>\n              <DropdownMenuContent\n                className=\"w-[--radix-dropdown-menu-trigger-width] min-w-56 rounded-lg\"\n                side=\"bottom\"\n                align=\"end\"\n                sideOffset={4}\n              >\n                <DropdownMenuLabel className=\"p-0 font-normal\">\n                  <div className=\"flex items-center gap-2 px-1 py-1.5 text-left text-sm\">\n                    <Avatar className=\"h-8 w-8\">\n                      <AvatarImage\n                        src={data.user.avatar}\n                        alt={data.user.name}\n                      />\n                      <AvatarFallback>CN</AvatarFallback>\n                    </Avatar>\n                    <div className=\"grid flex-1 text-left text-sm leading-tight\">\n                      <span className=\"truncate font-semibold\">\n                        {data.user.name}\n                      </span>\n                      <span className=\"truncate text-xs\">\n                        {data.user.email}\n                      </span>\n                    </div>\n                  </div>\n                </DropdownMenuLabel>\n                <DropdownMenuSeparator />\n                <DropdownMenuGroup>\n                  <DropdownMenuItem>\n                    <Settings2 />\n                    Account\n                  </DropdownMenuItem>\n                </DropdownMenuGroup>\n                <DropdownMenuSeparator />\n                <DropdownMenuItem>\n                  <LogOut />\n                  Log out\n                </DropdownMenuItem>\n              </DropdownMenuContent>\n            </DropdownMenu>\n          </SidebarMenuItem>\n        </SidebarMenu>\n      </SidebarFooter>\n      <SidebarRail />\n    </Sidebar>\n  );\n}\n"
    },
    {
      "path": "src/components/logo.tsx",
      "type": "registry:component",
      "target": "components/logo.tsx",
      "content": "export function Logo() {\n  return (\n    <svg\n      width=\"23\"\n      height=\"22\"\n      viewBox=\"0 0 23 22\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"flex-shrink-0\"\n    >\n      <path\n        d=\"M11.5266 15.5687C10.2941 15.5586 9.11621 15.0688 8.25187 14.2069C7.38753 13.3451 6.90759 12.1817 6.91754 10.9728H0.527987C0.499569 12.4072 0.762958 13.8327 1.30289 15.166C1.84283 16.4993 2.64841 17.7136 3.67248 18.7379C4.69655 19.7621 5.91858 20.5758 7.26705 21.1312C8.61552 21.6867 10.0634 21.9728 11.5259 21.9728C12.9884 21.9728 14.4363 21.6867 15.7848 21.1312C17.1332 20.5758 18.3552 19.7621 19.3792 18.7379C20.4033 17.7136 21.2089 16.4993 21.7488 15.166C22.2888 13.8327 22.5522 12.4072 22.5238 10.9728H16.1315C16.1414 12.1817 15.6615 13.3451 14.7972 14.2069C13.9328 15.0688 12.7549 15.5586 11.5224 15.5687\"\n        fill=\"#68C949\"\n      />\n      <path\n        d=\"M11.5276 0C8.58665 0.0237508 5.77574 1.19599 3.71319 3.25887C1.65063 5.32175 0.505392 8.10631 0.52936 11H6.91949C6.91949 9.79713 7.40512 8.64353 8.26957 7.79297C9.13402 6.94242 10.3064 6.46457 11.5289 6.46457C12.7515 6.46457 13.924 6.94242 14.7884 7.79297C15.6529 8.64353 16.1385 9.79713 16.1385 11H22.5286C22.5405 9.56708 22.2654 8.14588 21.719 6.81758C21.1726 5.48927 20.3657 4.27985 19.3443 3.25839C18.3229 2.23694 17.107 1.42347 15.766 0.864387C14.4251 0.305308 12.9839 0.0115822 11.5276 0Z\"\n        fill=\"#1497E3\"\n      />\n    </svg>\n  );\n}\n"
    },
    {
      "path": "src/components/ui/logo-container.tsx",
      "type": "registry:component",
      "target": "components/ui/logo-container.tsx",
      "content": "import { cn } from \"@/lib/utils\";\n\ninterface LogoContainerProps {\n  logo: React.ComponentType;\n  className?: string;\n}\n\nexport function LogoContainer({\n  logo: LogoComponent,\n  className = \"size-4\",\n}: LogoContainerProps) {\n  return (\n    <div\n      className={cn(\n        \"flex items-center justify-center [&>svg]:max-h-full [&>svg]:max-w-full [&>svg]:h-auto [&>svg]:w-auto\",\n        className,\n      )}\n    >\n      <LogoComponent />\n    </div>\n  );\n}\n\n"
    },
    {
      "path": "src/app/demo/[name]/blocks/dashboard-page.tsx",
      "type": "registry:page",
      "target": "app/page.tsx",
      "content": "\"use client\";\n\nimport { SidebarProvider, SidebarTrigger } from \"@/components/ui/sidebar\";\nimport { BrandSidebar } from \"@/components/brand-sidebar\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Bell,\n  Search\n} from \"lucide-react\";\n\nexport default function DashboardPage() {\n  return (\n    <SidebarProvider>\n      <BrandSidebar />\n      <main className=\"flex-1 flex flex-col\">\n        {/* Content */}\n        <div className=\"flex-1 p-6\">\n          <p className=\"text-sm text-muted-foreground\">Dashboard content placeholder</p>\n        </div>\n      </main>\n    </SidebarProvider>\n  );\n}\n"
    }
  ]
}