{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "data-table-pagination",
  "type": "registry:ui",
  "title": "Data Table Pagination",
  "description": "An enhanced pagination component for data tables with items per page selection, item count display, and page navigation.",
  "registryDependencies": [
    "https://eco-design-system-2.vercel.app/r/themes/theme.json"
  ],
  "files": [
    {
      "path": "src/components/ui/data-table-pagination.tsx",
      "content": "import { ChevronLeftIcon, ChevronRightIcon } from \"lucide-react\";\nimport type * as React from \"react\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { cn } from \"@/lib/utils\";\n\ninterface DataTablePaginationProps {\n  className?: string;\n  variant?: \"advanced\" | \"basic\";\n  currentPage: number;\n  totalPages: number;\n  totalItems: number;\n  itemsPerPage: number;\n  onPageChange: (page: number) => void;\n  onItemsPerPageChange: (itemsPerPage: number) => void;\n  itemsPerPageOptions?: number[];\n}\n\nfunction DataTablePagination({\n  className,\n  variant = \"advanced\",\n  currentPage,\n  totalPages,\n  totalItems,\n  itemsPerPage,\n  onPageChange,\n  onItemsPerPageChange,\n  itemsPerPageOptions = [10, 25, 50, 100],\n  ...props\n}: DataTablePaginationProps) {\n  const handlePageInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const page = parseInt(e.target.value);\n    if (page >= 1 && page <= totalPages) {\n      onPageChange(page);\n    }\n  };\n\n  const handlePageInputKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === \"Enter\") {\n      const page = parseInt(e.currentTarget.value);\n      if (page >= 1 && page <= totalPages) {\n        onPageChange(page);\n      }\n    }\n  };\n\n  const handlePreviousPage = () => {\n    if (currentPage > 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const handleNextPage = () => {\n    if (currentPage < totalPages) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  const handleItemsPerPageChange = (value: string) => {\n    const newItemsPerPage = parseInt(value);\n    onItemsPerPageChange(newItemsPerPage);\n    // Reset to page 1 when changing items per page\n    onPageChange(1);\n  };\n\n  return (\n    <div\n      data-slot=\"data-table-pagination\"\n      className={cn(\"w-full\", className)}\n      {...props}\n    >\n      {variant === \"basic\" ? (\n        /* Compact Layout */\n        <div className=\"flex items-center justify-between w-full\">\n          <span className=\"text-sm text-muted-foreground\">\n            {totalItems} items\n          </span>\n\n          <div className=\"flex items-center gap-4\">\n            <span className=\"text-sm text-muted-foreground\">\n              Page {currentPage} of {totalPages}\n            </span>\n            <div className=\"flex items-center gap-1\">\n              <Button\n                variant=\"outline\"\n                size=\"default\"\n                onClick={handlePreviousPage}\n                disabled={currentPage <= 1}\n                aria-label=\"Go to previous page\"\n              >\n                <ChevronLeftIcon className=\"size-4\" />\n              </Button>\n              <Button\n                variant=\"outline\"\n                size=\"default\"\n                onClick={handleNextPage}\n                disabled={currentPage >= totalPages}\n                aria-label=\"Go to next page\"\n              >\n                <ChevronRightIcon className=\"size-4\" />\n              </Button>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <>\n          {/* Desktop Layout */}\n          <div className=\"hidden md:flex items-center justify-between w-full\">\n            <div className=\"flex items-center gap-3\">\n              <div className=\"flex items-center gap-2\">\n                <Select value={itemsPerPage.toString()} onValueChange={handleItemsPerPageChange}>\n                  <SelectTrigger className=\"w-[160px]\" size=\"default\">\n                    <SelectValue />\n                  </SelectTrigger>\n                  <SelectContent>\n                    {itemsPerPageOptions.map((option) => (\n                      <SelectItem key={option} value={option.toString()}>\n                        {option} items per page\n                      </SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n              </div>\n              <span className=\"text-sm text-muted-foreground\">\n                {totalItems.toLocaleString()} total items\n              </span>\n            </div>\n\n            <div className=\"flex items-center gap-6\">\n              <div className=\"flex items-center gap-1\">\n                <span className=\"text-sm text-muted-foreground\">Page</span>\n                <Input\n                  type=\"number\"\n                  min={1}\n                  max={totalPages}\n                  value={currentPage}\n                  onChange={handlePageInputChange}\n                  onKeyDown={handlePageInputKeyDown}\n                  className=\"w-16 text-center [appearance:textfield] [&::-webkit-outer-spin-button]:appearance-none [&::-webkit-inner-spin-button]:appearance-none\"\n                  aria-label=\"Current page number\"\n                />\n                <span className=\"text-sm text-muted-foreground\">of {totalPages}</span>\n              </div>\n              <div className=\"flex items-center gap-1\">\n                <Button\n                  variant=\"outline\"\n                  size=\"default\"\n                  onClick={handlePreviousPage}\n                  disabled={currentPage <= 1}\n                  aria-label=\"Go to previous page\"\n                >\n                  <ChevronLeftIcon className=\"size-4\" />\n                </Button>\n                <Button\n                  variant=\"outline\"\n                  size=\"default\"\n                  onClick={handleNextPage}\n                  disabled={currentPage >= totalPages}\n                  aria-label=\"Go to next page\"\n                >\n                  <ChevronRightIcon className=\"size-4\" />\n                </Button>\n              </div>\n            </div>\n          </div>\n\n          {/* Mobile Layout */}\n          <div className=\"md:hidden space-y-3\">\n            {/* Top row: Items per page and total items */}\n            <div className=\"flex items-center justify-between\">\n              <Select value={itemsPerPage.toString()} onValueChange={handleItemsPerPageChange}>\n                <SelectTrigger className=\"w-[140px]\" size=\"default\">\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  {itemsPerPageOptions.map((option) => (\n                    <SelectItem key={option} value={option.toString()}>\n                      {option} items per page\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n              <span className=\"text-sm text-muted-foreground\">\n                {totalItems.toLocaleString()} total items\n              </span>\n            </div>\n\n            {/* Separator */}\n            <Separator className=\"my-0\" />\n\n            {/* Bottom row: Page indicator and navigation */}\n            <div className=\"flex items-center justify-between pt-3\">\n              <div className=\"flex items-center gap-1\">\n                <span className=\"text-sm text-muted-foreground\">Page</span>\n                <Input\n                  type=\"number\"\n                  min={1}\n                  max={totalPages}\n                  value={currentPage}\n                  onChange={handlePageInputChange}\n                  onKeyDown={handlePageInputKeyDown}\n                  className=\"w-16 text-center [appearance:textfield] [&::-webkit-outer-spin-button]:appearance-none [&::-webkit-inner-spin-button]:appearance-none\"\n                  aria-label=\"Current page number\"\n                />\n                <span className=\"text-sm text-muted-foreground\">of {totalPages}</span>\n              </div>\n              <div className=\"flex items-center gap-1\">\n                <Button\n                  variant=\"outline\"\n                  size=\"default\"\n                  onClick={handlePreviousPage}\n                  disabled={currentPage <= 1}\n                  aria-label=\"Go to previous page\"\n                >\n                  <ChevronLeftIcon className=\"size-4\" />\n                </Button>\n                <Button\n                  variant=\"outline\"\n                  size=\"default\"\n                  onClick={handleNextPage}\n                  disabled={currentPage >= totalPages}\n                  aria-label=\"Go to next page\"\n                >\n                  <ChevronRightIcon className=\"size-4\" />\n                </Button>\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport { DataTablePagination };\nexport type { DataTablePaginationProps };\n",
      "type": "registry:component"
    }
  ]
}