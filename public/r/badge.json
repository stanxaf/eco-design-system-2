{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "badge",
  "type": "registry:ui",
  "title": "Badge",
  "description": "Displays a small count or status indicator.",
  "registryDependencies": [
    "badge",
    "https://eco-design-system-2.vercel.app/r/themes/theme.json"
  ],
  "files": [
    {
      "path": "src/components/ui/badge.tsx",
      "content": "import { Slot } from \"@radix-ui/react-slot\";\nimport { type VariantProps, cva } from \"class-variance-authority\";\nimport type * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\n/**\n * Badge component with comprehensive variant system matching alert colors.\n *\n * **Available Variants:**\n * - `default`: General information with default color system (--default, --default-foreground)\n * - `destructive`: Critical errors and dangerous situations\n * - `info`: Important updates and system information\n * - `success`: Successful operations and confirmations\n * - `warning`: Warnings and cautionary messages\n *\n * **Features:**\n * - Color system matching alert component variants\n * - Light backgrounds with appropriate foreground colors\n * - Consistent semantic meaning across components\n * - asChild support for polymorphic rendering\n * - Comprehensive accessibility features\n * - Responsive design with proper sizing\n * - 4px border radius for all variants\n * - Default color system using slate colors for consistency\n *\n * **Usage Examples:**\n * ```tsx\n * // Basic badge\n * <Badge>New</Badge>\n *\n * // With variants\n * <Badge variant=\"info\">Info</Badge>\n * <Badge variant=\"success\">Success</Badge>\n * <Badge variant=\"warning\">Warning</Badge>\n * <Badge variant=\"destructive\">Error</Badge>\n *\n * // With asChild\n * <Badge asChild>\n *   <Link href=\"/notifications\">5</Link>\n * </Badge>\n * ```\n */\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center h-6 rounded-md px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-default text-default-foreground\",\n        destructive:\n          \"bg-alert-destructive text-alert-destructive-foreground\",\n        info:\n          \"bg-info text-info-foreground\",\n        success:\n          \"bg-success text-success-foreground\",\n        warning:\n          \"bg-warning text-warning-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  },\n);\n\n/**\n * Props for the Badge component.\n *\n * @property asChild - Whether to render as a child component using Radix Slot\n * @property variant - Badge variant for styling and semantic meaning\n * @property className - Additional CSS classes\n * @property children - Badge content (text, icons, etc.)\n */\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"span\"> &\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"span\";\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props}\n    />\n  );\n}\n\n/**\n * Main Badge component with variant support and asChild functionality.\n *\n * **Props:**\n * - `variant`: Choose from 5 semantic variants\n * - `asChild`: Enable polymorphic rendering with Radix Slot\n * - `className`: Add custom styling\n *\n * **Children:**\n * - Text content for badge labels\n * - Icons with automatic sizing (size-3)\n * - Any valid React children\n *\n * **Accessibility:**\n * - Proper focus-visible states with ring styling\n * - aria-invalid support for form validation\n * - Semantic span element with proper ARIA attributes\n *\n * **asChild Feature:**\n * - Renders as any valid HTML element or component\n * - Useful for creating badge-styled links, buttons, etc.\n * - Maintains all badge styling and behavior\n * - Example: <Badge asChild><Link href=\"/path\">Text</Link></Badge>\n */\nexport { Badge, badgeVariants };\n",
      "type": "registry:component"
    }
  ]
}